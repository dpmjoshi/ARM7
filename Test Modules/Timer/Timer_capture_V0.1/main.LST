ARM COMPILER V2.50a,  main                                                                 03/01/13  17:10:55  PAGE 1   


ARM COMPILER V2.50a, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\ARM\BIN\CA.exe main.c THUMB BROWSE DEBUG TABS(4) 

stmt  level    source

    1          //*************************************************************//
    2          // Project: Timer0 in Capture Mode                             //
    3          // Hardware Pins: channel0  (CAP 0.0 => P0.2)                  //
    4          //                                                             //
    5          //                                                             //
    6          //                                                             //
    7          //*************************************************************//
    8          #include"includes.h"
    9          
   10          #define OUT_PORT     1<<6
   11          //*************************Flags*******************************//
   12          U8 Uc_user_mode_flag = 4;
   13          U8 Uc_temp_arr[10] = {"00000"};
   14          
   15          
   16          void main()
   17          {   
   18   1        PINSEL0 |= 0X00050205;     // selecting UART0 and UART1
   19   1        PINSEL1 |= 0X00080000;
   20   1        IO1DIR  |= 0X0FFF0000;     //pins 1.16 to 1.23 output pins
   21   1        IO0DIR  |= 0X003E0C40;     //port 0 rs and en as output
   22   1        IO0CLR   = 0X00FF0000;    
   23   1        
   24   1        //*************************************//
   25   1        //         Initialisations             //
   26   1        //*************************************//
   27   1        lcd_init();
   28   1        timer0_init_interrupt();
   29   1        UART_init();
   30   1        ms_delay(1000);
   31   1        lcd_line2_disp("TIMER0 testing",0);
   32   1        uart0_send_string("\r\nUART1 Connected @ 9600 ");
   33   1        ms_delay(1000);
   34   1        while(1)
   35   1        { 
   36   2          hex_dec1(Uc_temp_arr, T0TC);
   37   2          lcd_line3_disp(Uc_temp_arr, 0);
   38   2      
   39   2          hex_dec1(Uc_temp_arr, Uc_pulse_width);
   40   2          lcd_line4_disp(Uc_temp_arr, 0);
   41   2        }
   42   1      }
ARM COMPILER V2.50a,  main                                                                 03/01/13  17:10:55  PAGE 2   

ASSEMBLY LISTING OF GENERATED OBJECT CODE



*** EXTERNALS:
 EXTERN CODE16 (lcd_init?T)
 EXTERN CODE16 (ms_delay?T)
 EXTERN CODE16 (lcd_line2_disp?T)
 EXTERN CODE16 (lcd_line3_disp?T)
 EXTERN CODE16 (lcd_line4_disp?T)
 EXTERN DATA (Uc_pulse_width)
 EXTERN CODE16 (timer0_init_interrupt?T)
 EXTERN CODE16 (UART_init?T)
 EXTERN CODE16 (uart0_send_string?T)
 EXTERN CODE16 (hex_dec1?T)
 EXTERN NUMBER (__startup)



*** PUBLICS:
 PUBLIC         main
 PUBLIC         Uc_user_mode_flag
 PUBLIC         Uc_temp_arr



*** DATA SEGMENT '?CON?main':
 00000000          ??S_3:
 00000000            DB          0x0D,0x0A,'UART1 Connected @ 9600 ',0x00
 0000001A          ??S_2:
 0000001A            DB          'TIMER0 testing',0x00

*** DATA SEGMENT '?DT0?main':
 00000000          Uc_user_mode_flag:
 00000000           BEGIN_INIT
 00000000  04        DB          0x4
 00000001           END_INIT
 00000001          Uc_temp_arr:
 00000001           BEGIN_INIT
 00000001            DB          '00000',0x00
 00000007            SPACE       4
 0000000B           END_INIT



*** CODE SEGMENT '?PR?main?main':
   16: void main()
 00000000  B500      PUSH        {LR}
   18:   PINSEL0 |= 0X00050205;     // selecting UART0 and UART1
 00000002  4800      LDR         R2,=0x50205
 00000004  4800      LDR         R0,=0xE002C000
 00000006  6801      LDR         R1,[R0,#0x0]
 00000008  4311      ORR         R1,R2
 0000000A  6001      STR         R1,[R0,#0x0]
   19:   PINSEL1 |= 0X00080000;
 0000000C  4800      LDR         R2,=0x80000
 0000000E  4800      LDR         R0,=0xE002C004
 00000010  6801      LDR         R1,[R0,#0x0]
 00000012  4311      ORR         R1,R2
 00000014  6001      STR         R1,[R0,#0x0]
   20:   IO1DIR  |= 0X0FFF0000;     //pins 1.16 to 1.23 output pins
 00000016  4800      LDR         R2,=0xFFF0000
 00000018  4800      LDR         R0,=0xE0028018
 0000001A  6801      LDR         R1,[R0,#0x0]
 0000001C  4311      ORR         R1,R2
 0000001E  6001      STR         R1,[R0,#0x0]
   21:   IO0DIR  |= 0X003E0C40;     //port 0 rs and en as output
 00000020  4800      LDR         R2,=0x3E0C40
 00000022  4800      LDR         R0,=0xE0028008
 00000024  6801      LDR         R1,[R0,#0x0]
 00000026  4311      ORR         R1,R2
 00000028  6001      STR         R1,[R0,#0x0]
   22:   IO0CLR   = 0X00FF0000;    
 0000002A  4800      LDR         R1,=0xFF0000
ARM COMPILER V2.50a,  main                                                                 03/01/13  17:10:55  PAGE 3   

 0000002C  4800      LDR         R0,=0xE002800C
 0000002E  6001      STR         R1,[R0,#0x0]
   27:   lcd_init();
 00000030  F7FF      BL          lcd_init?T  ; T=0x0001  (1)
 00000032  FFE6      BL          lcd_init?T  ; T=0x0001  (2)
   28:   timer0_init_interrupt();
 00000034  F7FF      BL          timer0_init_interrupt?T  ; T=0x0001  (1)
 00000036  FFE4      BL          timer0_init_interrupt?T  ; T=0x0001  (2)
   29:   UART_init();
 00000038  F7FF      BL          UART_init?T  ; T=0x0001  (1)
 0000003A  FFE2      BL          UART_init?T  ; T=0x0001  (2)
   30:   ms_delay(1000);
 0000003C  48FA      LDR         R0,=0x3E8
 0000003E  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 00000040  FFDF      BL          ms_delay?T  ; T=0x0001  (2)
   31:   lcd_line2_disp("TIMER0 testing",0);
 00000042  4800      LDR         R0,=??S_2 ; ??S_2
 00000044  2100      MOV         R1,#0x0
 00000046  F7FF      BL          lcd_line2_disp?T  ; T=0x0001  (1)
 00000048  FFDB      BL          lcd_line2_disp?T  ; T=0x0001  (2)
   32:   uart0_send_string("\r\nUART1 Connected @ 9600 ");
 0000004A  4800      LDR         R0,=??S_3 ; ??S_3
 0000004C  F7FF      BL          uart0_send_string?T  ; T=0x0001  (1)
 0000004E  FFD8      BL          uart0_send_string?T  ; T=0x0001  (2)
   33:   ms_delay(1000);
 00000050  48FA      LDR         R0,=0x3E8
 00000052  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 00000054  FFD5      BL          ms_delay?T  ; T=0x0001  (2)
   34:   while(1)
 00000056          L_3:
   36:       hex_dec1(Uc_temp_arr, T0TC);
 00000056  4800      LDR         R0,=0xE0004008
 00000058  6801      LDR         R1,[R0,#0x0]
 0000005A  4800      LDR         R0,=Uc_temp_arr ; Uc_temp_arr
 0000005C  F7FF      BL          hex_dec1?T  ; T=0x0001  (1)
 0000005E  FFD0      BL          hex_dec1?T  ; T=0x0001  (2)
   37:     lcd_line3_disp(Uc_temp_arr, 0);
 00000060  4800      LDR         R0,=Uc_temp_arr ; Uc_temp_arr
 00000062  2100      MOV         R1,#0x0
 00000064  F7FF      BL          lcd_line3_disp?T  ; T=0x0001  (1)
 00000066  FFCC      BL          lcd_line3_disp?T  ; T=0x0001  (2)
   39:     hex_dec1(Uc_temp_arr, Uc_pulse_width);
 00000068  4800      LDR         R0,=Uc_temp_arr ; Uc_temp_arr
 0000006A  4800      LDR         R1,=Uc_pulse_width ; Uc_pulse_width
 0000006C  6809      LDR         R1,[R1,#0x0] ; Uc_pulse_width
 0000006E  F7FF      BL          hex_dec1?T  ; T=0x0001  (1)
 00000070  FFC7      BL          hex_dec1?T  ; T=0x0001  (2)
   40:     lcd_line4_disp(Uc_temp_arr, 0);
 00000072  4800      LDR         R0,=Uc_temp_arr ; Uc_temp_arr
 00000074  2100      MOV         R1,#0x0
 00000076  F7FF      BL          lcd_line4_disp?T  ; T=0x0001  (1)
 00000078  FFC3      BL          lcd_line4_disp?T  ; T=0x0001  (2)
   41:   }
 0000007A  E7EC      B           L_3  ; T=0x00000056
   42: }
 0000007C  BC08      POP         {R3}
 0000007E  4718      BX          R3
 00000080          ENDP ; 'main'



Module Information          Static
----------------------------------
  code size            =    ------
  data size            =        11
  const size           =        41
End of Module Information.


ARM COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
