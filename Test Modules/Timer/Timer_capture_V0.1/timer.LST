ARM COMPILER V2.50a,  timer                                                                03/01/13  17:10:55  PAGE 1   


ARM COMPILER V2.50a, COMPILATION OF MODULE timer
OBJECT MODULE PLACED IN timer.OBJ
COMPILER INVOKED BY: C:\Keil\ARM\BIN\CA.exe timer.c THUMB BROWSE DEBUG TABS(4) 

stmt  level    source

    1          #include"includes.h"
    2          
    3          U8  Uc_time1_arr[20];
    4          U8  Uc_fre = 1;
    5          U32 Uc_pulse_width = 0;
    6          
    7          void timer0_ISR(void)__irq
    8          {
    9   1          if((T0IR & 0x10))
   10   1          {
   11   2              Uc_pulse_width = T0CR0;
   12   2              T0TC = 0x00;
   13   2              uart0_send_string("A");
   14   2              T0IR = 0x10;
   15   2          }
   16   1          if((T0IR & 0x20))
   17   1          {
   18   2              Uc_pulse_width = T0CR1;
   19   2              T0TC = 0x00;
   20   2              uart0_send_string("B");
   21   2              T0IR = 0x20;
   22   2          }
   23   1      
   24   1       VICVectAddr   = 0x00;
   25   1      }
   26          
   27          
   28          void timer0_init_interrupt()
   29          {       
   30   1          VICVectAddr4 = (U32)&timer0_ISR;
   31   1          VICVectCntl4 = 0x20 | 4;
   32   1          VICIntEnable = 1 << 4;
   33   1      
   34   1          T0PR         = 15000;
   35   1          T0TCR        = T0_RESET;
   36   1          T0CTCR       = 0x00;
   37   1          T0CCR        = (CAP1_RISE | CAP1_I );
   38   1          T0TCR        = T0_START;
   39   1      }
   40          
   41          void timer1_init()
   42          {
   43   1          T1PR = 15000;
   44   1      }
   45          
   46          void timer1_on()
   47          {
   48   1          T1PC = 0;
   49   1          T1TCR = 0x01;
   50   1      }
   51          
   52          void timer1_off()
   53          {
   54   1          T1TCR = 0x00;
   55   1      }
   56          
   57          void time1_measure(U32 timer_val)
   58          {
   59   1          U32 uc_time_t1pc;
ARM COMPILER V2.50a,  timer                                                                03/01/13  17:10:55  PAGE 2   

   60   1          U8  uc_index = 0;
   61   1          
   62   1          uc_time_t1pc = timer_val;
   63   1      
   64   1          Uc_time1_arr[uc_index]  = uc_time_t1pc/10000;   
   65   1          Uc_time1_arr[uc_index] += 0x30;
   66   1          uc_time_t1pc            = uc_time_t1pc%10000;
   67   1          uc_index++;
   68   1          //--------------------------------------
   69   1          Uc_time1_arr[uc_index]  = uc_time_t1pc/1000;    
   70   1          Uc_time1_arr[uc_index] += 0x30;
   71   1          uc_time_t1pc            = uc_time_t1pc%1000;
   72   1          uc_index++;
   73   1          //--------------------------------------
   74   1          Uc_time1_arr[uc_index]  = uc_time_t1pc/100;
   75   1          Uc_time1_arr[uc_index] += 0x30;
   76   1          uc_time_t1pc    = uc_time_t1pc%100;
   77   1          uc_index++;
   78   1          //--------------------------------------
   79   1          Uc_time1_arr[uc_index]  = uc_time_t1pc/10;
   80   1          Uc_time1_arr[uc_index] += 0x30;
   81   1          uc_time_t1pc            = uc_time_t1pc%10;
   82   1          uc_index++;
   83   1          //--------------------------------------
   84   1          //--------------------------------------
   85   1          Uc_time1_arr[uc_index]  = uc_time_t1pc;
   86   1          Uc_time1_arr[uc_index] += 0x30;
   87   1          uc_index++;
   88   1         
   89   1          Uc_time1_arr[uc_index]  = '\0' ;
   90   1          lcd_line4_disp(&Uc_time1_arr[0],0);
   91   1      }
   92          
   93          void ms_delay(unsigned int w)
   94          {
   95   1         T1TCR  = 0X01;
   96   1         T1PR   = 1000;
   97   1         while(T1TC<w)
   98   1            {
   99   2            }                                                             
  100   1         T1TC   = 0;
  101   1         T1TCR  = 0;
  102   1      }
  103          
  104          void key_delay(unsigned int w)
  105          {
  106   1         T1TCR = 0X01;
  107   1         T1PR  = 15000;
  108   1         while(T1TC<w)
  109   1            {
  110   2            }                                                             
  111   1         T1TC  = 0;
  112   1         T1TCR = 0;
  113   1      }
ARM COMPILER V2.50a,  timer                                                                03/01/13  17:10:55  PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE



*** EXTERNALS:
 EXTERN CODE16 (lcd_line4_disp?T)
 EXTERN CODE16 (uart0_send_string?T)
 EXTERN CODE32 (uart0_send_string?A)
 EXTERN CODE16 (?C?UDIV?T)



*** PUBLICS:
 PUBLIC         ms_delay?T
 PUBLIC         timer0_init_interrupt?T
 PUBLIC         timer1_init?T
 PUBLIC         timer1_on?T
 PUBLIC         timer1_off?T
 PUBLIC         time1_measure?T
 PUBLIC         key_delay?T
 PUBLIC         timer0_ISR?A
 PUBLIC         Uc_time1_arr
 PUBLIC         Uc_fre
 PUBLIC         Uc_pulse_width



*** DATA SEGMENT '?CON?timer':
 00000000          ??S_2:
 00000000            DB          'B',0x00
 00000002          ??S_1:
 00000002            DB          'A',0x00

*** DATA SEGMENT '?DT0?timer':
 00000000          Uc_pulse_width:
 00000000           BEGIN_INIT
 00000000  00000000  DD          0x0
 00000004           END_INIT
 00000004          Uc_time1_arr:
 00000004            DS          20
 00000018          Uc_fre:
 00000018           BEGIN_INIT
 00000018  01        DB          0x1
 00000019           END_INIT



*** CODE SEGMENT '?PR?timer0_ISR?A?timer':
    7: void timer0_ISR(void)__irq
 00000000  E92D5F0F  STMDB       R13!,{R0-R3,R8-R12,LR}
    9:     if((T0IR & 0x10))
 00000004  E5100000  LDR         R0,=0xE0004000
 00000008  E5900000  LDR         R0,[R0,#0x0]
 0000000C  E3100010  TST         R0,#0x0010
 00000010  0A00000B  BEQ         L_1  ; Targ=0x44
   11:         Uc_pulse_width = T0CR0;
 00000014  E5100000  LDR         R0,=0xE000402C
 00000018  E5901000  LDR         R1,[R0,#0x0]
 0000001C  E5100000  LDR         R0,=Uc_pulse_width ; Uc_pulse_width
 00000020  E5801000  STR         R1,[R0,#0x0] ; Uc_pulse_width
   12:         T0TC = 0x00;
 00000024  E3A01000  MOV         R1,#0x0
 00000028  E5100000  LDR         R0,=0xE0004008
 0000002C  E5801000  STR         R1,[R0,#0x0]
   13:         uart0_send_string("A");
 00000030  E3E00102  MVN         R0,#0x102 ; ??S_1
 00000034  EBFFFFF1  BL          uart0_send_string?A  ; Targ=0x0
   14:         T0IR = 0x10;
 00000038  E3A01010  MOV         R1,#0x10
 0000003C  E5100000  LDR         R0,=0xE0004000
 00000040  E5801000  STR         R1,[R0,#0x0]
   15:      }
 00000044          L_1:
   16:     if((T0IR & 0x20))
ARM COMPILER V2.50a,  timer                                                                03/01/13  17:10:55  PAGE 4   

 00000044  E5100000  LDR         R0,=0xE0004000
 00000048  E5900000  LDR         R0,[R0,#0x0]
 0000004C  E3100020  TST         R0,#0x0020
 00000050  0A00000B  BEQ         L_2  ; Targ=0x84
   18:         Uc_pulse_width = T0CR1;
 00000054  E5100000  LDR         R0,=0xE0004030
 00000058  E5901000  LDR         R1,[R0,#0x0]
 0000005C  E5100000  LDR         R0,=Uc_pulse_width ; Uc_pulse_width
 00000060  E5801000  STR         R1,[R0,#0x0] ; Uc_pulse_width
   19:         T0TC = 0x00;
 00000064  E3A01000  MOV         R1,#0x0
 00000068  E5100000  LDR         R0,=0xE0004008
 0000006C  E5801000  STR         R1,[R0,#0x0]
   20:         uart0_send_string("B");
 00000070  E3E00102  MVN         R0,#0x102 ; ??S_2
 00000074  EBFFFFE1  BL          uart0_send_string?A  ; Targ=0x0
   21:         T0IR = 0x20;
 00000078  E3A01020  MOV         R1,#0x20
 0000007C  E5100000  LDR         R0,=0xE0004000
 00000080  E5801000  STR         R1,[R0,#0x0]
   22:      }
 00000084          L_2:
   24:  VICVectAddr   = 0x00;
 00000084  E3A01000  MOV         R1,#0x0
 00000088  E5100000  LDR         R0,=0xFFFFF030
 0000008C  E5801000  STR         R1,[R0,#0x0]
   25: }
 00000090  E8BD5F0F  LDMIA       R13!,{R0-R3,R8-R12,LR}
 00000094  E25EF004  SUBS        R15,R14,#0x0004
 00000098          ENDP ; 'timer0_ISR?A'


*** CODE SEGMENT '?PR?timer0_init_interrupt?T?timer':
   30:     VICVectAddr4 = (U32)&timer0_ISR;
 00000000  4900      LDR         R1,=timer0_ISR?A ; timer0_ISR?A
 00000002  4800      LDR         R0,=0xFFFFF110
 00000004  6001      STR         R1,[R0,#0x0]
   31:       VICVectCntl4 = 0x20 | 4;
 00000006  2124      MOV         R1,#0x24
 00000008  4800      LDR         R0,=0xFFFFF210
 0000000A  6001      STR         R1,[R0,#0x0]
   32:     VICIntEnable = 1 << 4;
 0000000C  2110      MOV         R1,#0x10
 0000000E  4800      LDR         R0,=0xFFFFF010
 00000010  6001      STR         R1,[R0,#0x0]
   34:     T0PR         = 15000;
 00000012  4800      LDR         R1,=0x3A98
 00000014  4800      LDR         R0,=0xE000400C
 00000016  6001      STR         R1,[R0,#0x0]
   35:     T0TCR        = T0_RESET;
 00000018  2102      MOV         R1,#0x2
 0000001A  4800      LDR         R0,=0xE0004004
 0000001C  6001      STR         R1,[R0,#0x0]
   36:     T0CTCR       = 0x00;
 0000001E  2100      MOV         R1,#0x0
 00000020  4800      LDR         R0,=0xE0004070
 00000022  6001      STR         R1,[R0,#0x0]
   37:     T0CCR        = (CAP1_RISE | CAP1_I );
 00000024  2128      MOV         R1,#0x28
 00000026  4800      LDR         R0,=0xE0004028
 00000028  6001      STR         R1,[R0,#0x0]
   38:     T0TCR        = T0_START;
 0000002A  2101      MOV         R1,#0x1
 0000002C  4800      LDR         R0,=0xE0004004
 0000002E  6001      STR         R1,[R0,#0x0]
   39: }
 00000030  4770      BX          R14
 00000032          ENDP ; 'timer0_init_interrupt?T'

ARM COMPILER V2.50a,  timer                                                                03/01/13  17:10:55  PAGE 5   


*** CODE SEGMENT '?PR?timer1_init?T?timer':
   43:     T1PR = 15000;
 00000000  4800      LDR         R1,=0x3A98
 00000002  4800      LDR         R0,=0xE000800C
 00000004  6001      STR         R1,[R0,#0x0]
   44: }
 00000006  4770      BX          R14
 00000008          ENDP ; 'timer1_init?T'


*** CODE SEGMENT '?PR?timer1_on?T?timer':
   48:     T1PC = 0;
 00000000  2100      MOV         R1,#0x0
 00000002  4800      LDR         R0,=0xE0008010
 00000004  6001      STR         R1,[R0,#0x0]
   49:     T1TCR = 0x01;
 00000006  2101      MOV         R1,#0x1
 00000008  4800      LDR         R0,=0xE0008004
 0000000A  6001      STR         R1,[R0,#0x0]
   50: }
 0000000C  4770      BX          R14
 0000000E          ENDP ; 'timer1_on?T'


*** CODE SEGMENT '?PR?timer1_off?T?timer':
   54:     T1TCR = 0x00;
 00000000  2100      MOV         R1,#0x0
 00000002  4800      LDR         R0,=0xE0008004
 00000004  6001      STR         R1,[R0,#0x0]
   55: }
 00000006  4770      BX          R14
 00000008          ENDP ; 'timer1_off?T'


*** CODE SEGMENT '?PR?time1_measure?T?timer':
   57: void time1_measure(U32 timer_val)
 00000000  B510      PUSH        {R4,LR}
 00000002  ---- Variable 'timer_val' assigned to Register 'R0' ----
   58: {
 00000002            ; SCOPE-START
   60:     U8  uc_index = 0;
 00000002  2200      MOV         R2,#0x0
 00000004  ---- Variable 'uc_index' assigned to Register 'R2' ----
   62:     uc_time_t1pc = timer_val;
 00000004  1C03      MOV         R3,R0 ; timer_val
 00000006  ---- Variable 'uc_time_t1pc' assigned to Register 'R3' ----
   64:     Uc_time1_arr[uc_index]  = uc_time_t1pc/10000;   
 00000006  1C18      MOV         R0,R3 ; uc_time_t1pc
 00000008  4800      LDR         R1,=0x2710
 0000000A  F7FF      BL          ?C?UDIV?T  ; T=0x0001  (1) ; ?C?UDIV?T
 0000000C  FFF9      BL          ?C?UDIV?T  ; T=0x0001  (2) ; ?C?UDIV?T
 0000000E  1C08      MOV         R0,R1
 00000010  0600      LSL         R0,R0,#0x18
 00000012  0E00      LSR         R0,R0,#0x18
 00000014  1C11      MOV         R1,R2 ; uc_index
 00000016  060C      LSL         R4,R1,#0x18 ; uc_index
 00000018  0E24      LSR         R4,R4,#0x18
 0000001A  4800      LDR         R1,=Uc_time1_arr ; Uc_time1_arr
 0000001C  5508      STRB        R0,[R1,R4]
   65:     Uc_time1_arr[uc_index] += 0x30;
 0000001E  1C10      MOV         R0,R2 ; uc_index
 00000020  0601      LSL         R1,R0,#0x18 ; uc_index
 00000022  0E09      LSR         R1,R1,#0x18
 00000024  4800      LDR         R0,=Uc_time1_arr ; Uc_time1_arr
 00000026  1840      ADD         R0,R1 ; Uc_time1_arr
 00000028  7801      LDRB        R1,[R0,#0x0]
 0000002A  3130      ADD         R1,#0x30
 0000002C  7001      STRB        R1,[R0,#0x0]
   66:     uc_time_t1pc            = uc_time_t1pc%10000;
 0000002E  1C18      MOV         R0,R3 ; uc_time_t1pc
 00000030  4800      LDR         R1,=0x2710
 00000032  F7FF      BL          ?C?UDIV?T  ; T=0x0001  (1) ; ?C?UDIV?T
ARM COMPILER V2.50a,  timer                                                                03/01/13  17:10:55  PAGE 6   

 00000034  FFE5      BL          ?C?UDIV?T  ; T=0x0001  (2) ; ?C?UDIV?T
 00000036  1C01      MOV         R1,R0
 00000038  1C0B      MOV         R3,R1 ; uc_time_t1pc
   67:     uc_index++;
 0000003A  3201      ADD         R2,#0x1
 0000003C  0612      LSL         R2,R2,#0x18
 0000003E  0E12      LSR         R2,R2,#0x18
   69:     Uc_time1_arr[uc_index]  = uc_time_t1pc/1000;    
 00000040  1C18      MOV         R0,R3 ; uc_time_t1pc
 00000042  49FA      LDR         R1,=0x3E8
 00000044  F7FF      BL          ?C?UDIV?T  ; T=0x0001  (1) ; ?C?UDIV?T
 00000046  FFDC      BL          ?C?UDIV?T  ; T=0x0001  (2) ; ?C?UDIV?T
 00000048  1C08      MOV         R0,R1
 0000004A  0600      LSL         R0,R0,#0x18
 0000004C  0E00      LSR         R0,R0,#0x18
 0000004E  1C11      MOV         R1,R2 ; uc_index
 00000050  060C      LSL         R4,R1,#0x18 ; uc_index
 00000052  0E24      LSR         R4,R4,#0x18
 00000054  4800      LDR         R1,=Uc_time1_arr ; Uc_time1_arr
 00000056  5508      STRB        R0,[R1,R4]
   70:     Uc_time1_arr[uc_index] += 0x30;
 00000058  1C10      MOV         R0,R2 ; uc_index
 0000005A  0601      LSL         R1,R0,#0x18 ; uc_index
 0000005C  0E09      LSR         R1,R1,#0x18
 0000005E  4800      LDR         R0,=Uc_time1_arr ; Uc_time1_arr
 00000060  1840      ADD         R0,R1 ; Uc_time1_arr
 00000062  7801      LDRB        R1,[R0,#0x0]
 00000064  3130      ADD         R1,#0x30
 00000066  7001      STRB        R1,[R0,#0x0]
   71:     uc_time_t1pc            = uc_time_t1pc%1000;
 00000068  1C18      MOV         R0,R3 ; uc_time_t1pc
 0000006A  49FA      LDR         R1,=0x3E8
 0000006C  F7FF      BL          ?C?UDIV?T  ; T=0x0001  (1) ; ?C?UDIV?T
 0000006E  FFC8      BL          ?C?UDIV?T  ; T=0x0001  (2) ; ?C?UDIV?T
 00000070  1C01      MOV         R1,R0
 00000072  1C0B      MOV         R3,R1 ; uc_time_t1pc
   72:     uc_index++;
 00000074  3201      ADD         R2,#0x1
 00000076  0612      LSL         R2,R2,#0x18
 00000078  0E12      LSR         R2,R2,#0x18
   74:     Uc_time1_arr[uc_index]  = uc_time_t1pc/100;
 0000007A  1C18      MOV         R0,R3 ; uc_time_t1pc
 0000007C  2164      MOV         R1,#0x64
 0000007E  F7FF      BL          ?C?UDIV?T  ; T=0x0001  (1) ; ?C?UDIV?T
 00000080  FFBF      BL          ?C?UDIV?T  ; T=0x0001  (2) ; ?C?UDIV?T
 00000082  1C08      MOV         R0,R1
 00000084  0600      LSL         R0,R0,#0x18
 00000086  0E00      LSR         R0,R0,#0x18
 00000088  1C11      MOV         R1,R2 ; uc_index
 0000008A  060C      LSL         R4,R1,#0x18 ; uc_index
 0000008C  0E24      LSR         R4,R4,#0x18
 0000008E  4800      LDR         R1,=Uc_time1_arr ; Uc_time1_arr
 00000090  5508      STRB        R0,[R1,R4]
   75:     Uc_time1_arr[uc_index] += 0x30;
 00000092  1C10      MOV         R0,R2 ; uc_index
 00000094  0601      LSL         R1,R0,#0x18 ; uc_index
 00000096  0E09      LSR         R1,R1,#0x18
 00000098  4800      LDR         R0,=Uc_time1_arr ; Uc_time1_arr
 0000009A  1840      ADD         R0,R1 ; Uc_time1_arr
 0000009C  7801      LDRB        R1,[R0,#0x0]
 0000009E  3130      ADD         R1,#0x30
 000000A0  7001      STRB        R1,[R0,#0x0]
   76:     uc_time_t1pc    = uc_time_t1pc%100;
 000000A2  1C18      MOV         R0,R3 ; uc_time_t1pc
 000000A4  2164      MOV         R1,#0x64
 000000A6  F7FF      BL          ?C?UDIV?T  ; T=0x0001  (1) ; ?C?UDIV?T
ARM COMPILER V2.50a,  timer                                                                03/01/13  17:10:55  PAGE 7   

 000000A8  FFAB      BL          ?C?UDIV?T  ; T=0x0001  (2) ; ?C?UDIV?T
 000000AA  1C01      MOV         R1,R0
 000000AC  1C0B      MOV         R3,R1 ; uc_time_t1pc
   77:     uc_index++;
 000000AE  3201      ADD         R2,#0x1
 000000B0  0612      LSL         R2,R2,#0x18
 000000B2  0E12      LSR         R2,R2,#0x18
   79:     Uc_time1_arr[uc_index]  = uc_time_t1pc/10;
 000000B4  1C18      MOV         R0,R3 ; uc_time_t1pc
 000000B6  210A      MOV         R1,#0xA
 000000B8  F7FF      BL          ?C?UDIV?T  ; T=0x0001  (1) ; ?C?UDIV?T
 000000BA  FFA2      BL          ?C?UDIV?T  ; T=0x0001  (2) ; ?C?UDIV?T
 000000BC  1C08      MOV         R0,R1
 000000BE  0600      LSL         R0,R0,#0x18
 000000C0  0E00      LSR         R0,R0,#0x18
 000000C2  1C11      MOV         R1,R2 ; uc_index
 000000C4  060C      LSL         R4,R1,#0x18 ; uc_index
 000000C6  0E24      LSR         R4,R4,#0x18
 000000C8  4800      LDR         R1,=Uc_time1_arr ; Uc_time1_arr
 000000CA  5508      STRB        R0,[R1,R4]
   80:     Uc_time1_arr[uc_index] += 0x30;
 000000CC  1C10      MOV         R0,R2 ; uc_index
 000000CE  0601      LSL         R1,R0,#0x18 ; uc_index
 000000D0  0E09      LSR         R1,R1,#0x18
 000000D2  4800      LDR         R0,=Uc_time1_arr ; Uc_time1_arr
 000000D4  1840      ADD         R0,R1 ; Uc_time1_arr
 000000D6  7801      LDRB        R1,[R0,#0x0]
 000000D8  3130      ADD         R1,#0x30
 000000DA  7001      STRB        R1,[R0,#0x0]
   81:      uc_time_t1pc            = uc_time_t1pc%10;
 000000DC  1C18      MOV         R0,R3 ; uc_time_t1pc
 000000DE  210A      MOV         R1,#0xA
 000000E0  F7FF      BL          ?C?UDIV?T  ; T=0x0001  (1) ; ?C?UDIV?T
 000000E2  FF8E      BL          ?C?UDIV?T  ; T=0x0001  (2) ; ?C?UDIV?T
 000000E4  1C01      MOV         R1,R0
 000000E6  1C0B      MOV         R3,R1 ; uc_time_t1pc
   82:     uc_index++;
 000000E8  3201      ADD         R2,#0x1
 000000EA  0612      LSL         R2,R2,#0x18
 000000EC  0E12      LSR         R2,R2,#0x18
   85:      Uc_time1_arr[uc_index]  = uc_time_t1pc;
 000000EE  1C18      MOV         R0,R3 ; uc_time_t1pc
 000000F0  0600      LSL         R0,R0,#0x18 ; uc_time_t1pc
 000000F2  0E00      LSR         R0,R0,#0x18
 000000F4  1C11      MOV         R1,R2 ; uc_index
 000000F6  060B      LSL         R3,R1,#0x18 ; uc_index
 000000F8  0E1B      LSR         R3,R3,#0x18
 000000FA  4800      LDR         R1,=Uc_time1_arr ; Uc_time1_arr
 000000FC  54C8      STRB        R0,[R1,R3]
   86:     Uc_time1_arr[uc_index] += 0x30;
 000000FE  1C10      MOV         R0,R2 ; uc_index
 00000100  0601      LSL         R1,R0,#0x18 ; uc_index
 00000102  0E09      LSR         R1,R1,#0x18
 00000104  4800      LDR         R0,=Uc_time1_arr ; Uc_time1_arr
 00000106  1840      ADD         R0,R1 ; Uc_time1_arr
 00000108  7801      LDRB        R1,[R0,#0x0]
 0000010A  3130      ADD         R1,#0x30
 0000010C  7001      STRB        R1,[R0,#0x0]
   87:      uc_index++;
 0000010E  3201      ADD         R2,#0x1
 00000110  0612      LSL         R2,R2,#0x18
 00000112  0E12      LSR         R2,R2,#0x18
   89:     Uc_time1_arr[uc_index]  = '\0' ;
 00000114  2000      MOV         R0,#0x0
 00000116  1C11      MOV         R1,R2 ; uc_index
 00000118  060A      LSL         R2,R1,#0x18 ; uc_index
ARM COMPILER V2.50a,  timer                                                                03/01/13  17:10:55  PAGE 8   

 0000011A  0E12      LSR         R2,R2,#0x18
 0000011C  4800      LDR         R1,=Uc_time1_arr ; Uc_time1_arr
 0000011E  5488      STRB        R0,[R1,R2]
   90:     lcd_line4_disp(&Uc_time1_arr[0],0);
 00000120  4800      LDR         R0,=Uc_time1_arr ; Uc_time1_arr
 00000122  2100      MOV         R1,#0x0
 00000124  F7FF      BL          lcd_line4_disp?T  ; T=0x0001  (1)
 00000126  FF6C      BL          lcd_line4_disp?T  ; T=0x0001  (2)
 00000128            ; SCOPE-END
   91: }
 00000128  BC10      POP         {R4}
 0000012A  BC08      POP         {R3}
 0000012C  4718      BX          R3
 0000012E          ENDP ; 'time1_measure?T'


*** CODE SEGMENT '?PR?ms_delay?T?timer':
   93: void ms_delay(unsigned int w)
 00000000  ---- Variable 'w' assigned to Register 'R0' ----
   95:    T1TCR  = 0X01;
 00000000  2201      MOV         R2,#0x1
 00000002  4800      LDR         R1,=0xE0008004
 00000004  600A      STR         R2,[R1,#0x0]
   96:    T1PR   = 1000;
 00000006  4AFA      LDR         R2,=0x3E8
 00000008  4800      LDR         R1,=0xE000800C
 0000000A  600A      STR         R2,[R1,#0x0]
   99:       }                                                                
 0000000C          L_3:
 0000000C  1C02      MOV         R2,R0 ; w
 0000000E  4800      LDR         R1,=0xE0008008
 00000010  6809      LDR         R1,[R1,#0x0]
 00000012  4291      CMP         R1,R2
 00000014  D3FA      BCC         L_3  ; T=0x0000000C
  100:    T1TC   = 0;
 00000016  2100      MOV         R1,#0x0
 00000018  4800      LDR         R0,=0xE0008008
 0000001A  6001      STR         R1,[R0,#0x0]
  101:    T1TCR  = 0;
 0000001C  4800      LDR         R0,=0xE0008004
 0000001E  6001      STR         R1,[R0,#0x0]
  102: }
 00000020  4770      BX          R14
 00000022          ENDP ; 'ms_delay?T'


*** CODE SEGMENT '?PR?key_delay?T?timer':
  104: void key_delay(unsigned int w)
 00000000  ---- Variable 'w' assigned to Register 'R0' ----
  106:    T1TCR = 0X01;
 00000000  2201      MOV         R2,#0x1
 00000002  4800      LDR         R1,=0xE0008004
 00000004  600A      STR         R2,[R1,#0x0]
  107:    T1PR  = 15000;
 00000006  4800      LDR         R2,=0x3A98
 00000008  4800      LDR         R1,=0xE000800C
 0000000A  600A      STR         R2,[R1,#0x0]
  110:       }                                                                
 0000000C          L_7:
 0000000C  1C02      MOV         R2,R0 ; w
 0000000E  4800      LDR         R1,=0xE0008008
 00000010  6809      LDR         R1,[R1,#0x0]
 00000012  4291      CMP         R1,R2
 00000014  D3FA      BCC         L_7  ; T=0x0000000C
  111:    T1TC  = 0;
 00000016  2100      MOV         R1,#0x0
 00000018  4800      LDR         R0,=0xE0008008
 0000001A  6001      STR         R1,[R0,#0x0]
  112:    T1TCR = 0;
 0000001C  4800      LDR         R0,=0xE0008004
ARM COMPILER V2.50a,  timer                                                                03/01/13  17:10:55  PAGE 9   

 0000001E  6001      STR         R1,[R0,#0x0]
  113: }
 00000020  4770      BX          R14
 00000022          ENDP ; 'key_delay?T'



Module Information          Static
----------------------------------
  code size            =    ------
  data size            =        25
  const size           =         4
End of Module Information.


ARM COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
