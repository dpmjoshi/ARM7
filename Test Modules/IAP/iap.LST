ARM COMPILER V2.50a,  iap                                                                  05/11/12  14:28:51  PAGE 1   


ARM COMPILER V2.50a, COMPILATION OF MODULE iap
OBJECT MODULE PLACED IN iap.OBJ
COMPILER INVOKED BY: C:\Keil\ARM\BIN\CA.exe iap.c THUMB BROWSE DEBUG TABS(4) 

stmt  level    source

    1          #include"includes.h"
    2          
    3          
    4          
    5          
    6          U32 IAP_cmd[5] = {0,0,0,0,0};
    7          U32 IAP_result[3] = {0,0,0};
    8          
    9          U8  Uc_resp;
   10          
   11          
   12          void IAP_call(U32*, U32*, U32);
   13          U8   IAP_prep_sec(U8, U8);
   14          U8   IAP_erase_sec(U8, U8);
   15          U8   IAP_program_sec(U32, U32, U16, U32);
   16          //void IAP_prog_ROM(U8, U32);
   17          void IAP_read_boot_code();
   18          void IAP_status_code(U8);
   19          
   20          U8 uc_result;
   21          
   22          
   23          
   24          
   25          
   26          void IAP_call(U32 *iap_cmd, U32 *result, U32 iap_add)
   27          {
   28   1        
   29   1       __asm{mov r15,r2}
   30   1      
   31   1      }
*** WARNING C47 IN LINE 26 OF IAP.C: 'iap_cmd': unreferenced parameter
*** WARNING C47 IN LINE 26 OF IAP.C: 'result': unreferenced parameter
*** WARNING C47 IN LINE 26 OF IAP.C: 'iap_add': unreferenced parameter
   32          
   33          //**************************************************//
   34          
   35          //**************************************************//
   36          
   37          U8 IAP_prep_sec(U8 start_sec, U8 end_sec)
   38          {
   39   1      
   40   1       U8 dec_arr1[5] = {"00"};
   41   1      
   42   1      
   43   1       IAP_cmd[0] = 50;
   44   1       IAP_cmd[1] = start_sec;
   45   1       IAP_cmd[2] = end_sec;
   46   1       IAP_call(&IAP_cmd[0], &IAP_result[0], 0x7FFFFFF0);
   47   1      
   48   1       uc_result = IAP_result[0];
   49   1       uart0_send_string("\n\rPreparing Sectors ");
   50   1       IAP_status_code(uc_result);
   51   1       return uc_result;
   52   1      }
   53          //**************************************************//
   54          //                                                  //
   55          //**************************************************//
   56          
ARM COMPILER V2.50a,  iap                                                                  05/11/12  14:28:51  PAGE 2   

   57          U8 IAP_erase_sec(U8 start_sec, U8 end_sec)
   58          {
   59   1       IAP_cmd[0] = 52;
   60   1       IAP_cmd[1] = start_sec;
   61   1       IAP_cmd[2] = end_sec;
   62   1       IAP_cmd[3] = IAP_CCLK;
   63   1       IAP_call(&IAP_cmd[0], &IAP_result[0], 0x7FFFFFF0);
   64   1      
   65   1       uc_result = IAP_result[0];
   66   1       uart0_send_string("\n\rErase_sector      ");
   67   1       clrscr();
   68   1       lcd_line1_disp("Erasing Sectors...",0);
   69   1        
   70   1       IAP_status_code(uc_result);
   71   1       
   72   1       if(uc_result == 0)
   73   1       {
   74   2        ms_delay(10000);
   75   2        clrscr();
   76   2        lcd_line2_disp("Sectors Erased !",0);
   77   2       }
   78   1       return uc_result;
   79   1      }
   80          //**************************************************//
   81          
   82          //**************************************************//
   83          
   84          U8 IAP_program_sec(U32 dest_add, U32 ram_add, U16 no_bytes, U32 IAP_clk)
*** ERROR C25 IN LINE 84 OF IAP.C: syntax error near '0x40002000'
   85          {
*** ERROR C53 IN LINE 85 OF IAP.C: redefinition of 'IAP_program_sec': number of parameters different
   86   1        IAP_cmd[0] = 51;
   87   1        IAP_cmd[1] = dest_add;
   88   1        IAP_cmd[2] = (U32)ram_add;
   89   1        IAP_cmd[3] = no_bytes;
*** ERROR C67 IN LINE 89 OF IAP.C: 'no_bytes': undefined identifier
   90   1        IAP_cmd[4] = IAP_clk;
*** ERROR C67 IN LINE 90 OF IAP.C: 'IAP_clk': undefined identifier
   91   1      
   92   1        IAP_call(&IAP_cmd[0], &IAP_result[0], 0x7FFFFFF0);
   93   1        
   94   1        uc_result = IAP_result[0];
   95   1      
   96   1        clrscr();
   97   1        lcd_line1_disp("Programming_sector...",0);
   98   1        uart0_send_string("\n\rProgram_sector    ");
   99   1        IAP_status_code(uc_result);
  100   1      
  101   1        if(uc_result == 0)
  102   1        {
  103   2         ms_delay(10000);
  104   2         clrscr();
  105   2         lcd_line1_disp("Sectors programed !",0);
  106   2        }
  107   1      
  108   1        return uc_result;
  109   1      }
  110          //**************************************************//
  111          
  112          //**************************************************//
  113          void IAP_read_boot_code()
  114          {
  115   1       U32 boot_ver;
  116   1       U8  arr[5]= "00";
  117   1      
  118   1       IAP_cmd[0] = 55;
ARM COMPILER V2.50a,  iap                                                                  05/11/12  14:28:51  PAGE 3   

  119   1       
  120   1       IAP_call(&IAP_cmd[0], &IAP_result[0], 0x7FFFFFF0);
  121   1      
  122   1       uart0_send_string("\n\r Boot Version: ");
  123   1      
  124   1      
  125   1      
  126   1       boot_ver = IAP_result[0];
  127   1       uc_result = (boot_ver & 0xff); 
  128   1       uart1_send_byte(uc_result + 0x30); 
  129   1       
  130   1      
  131   1       boot_ver = IAP_result[1];
  132   1       uc_result = (boot_ver & 0xff); 
  133   1      
  134   1      
  135   1       hex_dec(arr, uc_result);
  136   1       uart1_send_string(arr);
  137   1      
  138   1      }
  139          
  140          
  141          
  142          void IAP_status_code(U8 status_code)
  143          {
  144   1        switch(status_code)
  145   1       {
  146   2        case 0:  uart0_send_string("   |    CMD_SUCCESS         |\n\r");
  147   2                 break;
  148   2       
  149   2        case 1:  uart0_send_string("   |    INVALID_CMD         |\n\r");
  150   2                 break;
  151   2      
  152   2        case 2:  uart0_send_string("   |    SRC_ADD_ERROR       |\n\r");
  153   2                 break;
  154   2       
  155   2        case 3:  uart0_send_string("   |    DST_ADD_ERROR       |\n\r");
  156   2                 break;
  157   2       
  158   2        case 4:  uart0_send_string("   |    SRC_ADD_NOT_MAPPED  |\n\r");
  159   2                 break;
  160   2      
  161   2        case 5:  uart0_send_string("   |    DST_ADD_NOT_MAPPED  |\n\r");
  162   2                 break;             
  163   2        
  164   2        case 6:  uart0_send_string("   |    COUNT_ERROR         |\n\r");
  165   2                 break; 
  166   2        
  167   2        case 7:  uart0_send_string("   |    INVALID_SECTOR      |\n\r");
  168   2                 break;
  169   2        
  170   2        case 8:  uart0_send_string("   |    SECTOR_NOT_BLANK    |\n\r");
  171   2                 break;
  172   2        
  173   2        case 9:  uart0_send_string("   |    SECTOR_NOT_PREPARED |\n\r");
  174   2                 break;       
  175   2        
  176   2        case 10: uart0_send_string("   |    COMPARE_ERROR       |\n\r");
  177   2                 break;
  178   2        
  179   2        case 11: uart0_send_string("   |    BUSY                |\n\r");
  180   2                 break; 
  181   2       }
  182   1      
  183   1      }
  184          
ARM COMPILER V2.50a,  iap                                                                  05/11/12  14:28:51  PAGE 4   

  185          
  186          
  187          //**************************************************//
  188          //                                                  //
  189          //**************************************************//
  190          
  191          void prog_rom()
  192          {
  193   1       Uc_resp = IAP_prep_sec(21, 21);         // cmmand success
  194   1       if(Uc_resp == 0)
  195   1       {
  196   2        ms_delay(10000);
  197   2       
  198   2        Uc_resp = IAP_erase_sec(21, 21);     // Erasing Sectors 
  199   2        if(Uc_resp == 0)
  200   2        {
  201   3         ms_delay(10000);
  202   3         Uc_resp = IAP_prep_sec(21, 21);    // Preparing Sectors
  203   3         if(Uc_resp == 0)
  204   3         {
  205   4          Uc_resp = IAP_program_sec(0x00070000, (U32)ram_add, 256, IAP_CCLK); // Programming Sectors
*** ERROR C95 IN LINE 205 OF IAP.C: 'IAP_program_sec': too many actual parameters
  206   4               
  207   4          uart0_send_string("\n\n\n\r RAM Array:---->  ");
  208   4          uart0_send_string(ram_add);
  209   4                 
  210   4          uart0_send_string("\n\n\n\r ROM Array:---->  ");
  211   4          uart0_send_string(0x00070000);
  212   4         } 
  213   3        }
  214   2       }
  215   1      }
  216          
  217          
  218          
  219          
  220          
  221          
  222          /*
  223          void IAP_prog_ROM(U8 sec_no, U32 src_add)
  224          {
  225           
  226          }
  227          
  228          */
  229          
  230          
  231          
  232          
  233          
  234          
  235          
  236          
  237          

ARM COMPILATION COMPLETE.  3 WARNING(S),  5 ERROR(S)
