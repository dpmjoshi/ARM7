ARM COMPILER V2.50a,  main                                                                 27/11/12  15:41:11  PAGE 1   


ARM COMPILER V2.50a, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\ARM\BIN\CA.exe main.c THUMB BROWSE DEBUG TABS(4) 

stmt  level    source

    1          #include"includes.h"
    2          //************************************************************//
    3          
    4          
    5          //*************************Flags*******************************//
    6          
    7          void main()
    8          {   
    9   1        PINSEL0 |= 0X00051505;     // selecting UART0 and UART1
   10   1        PINSEL1 |= 0X00080000;
   11   1        IO1DIR  |= 0X0FFF0000;     //pins 1.16 to 1.23 output pins
   12   1        IO0DIR  |= 0X003E0C00;     //port 0 rs and en as output
   13   1        IO0CLR   = 0X00FF0000;    
   14   1        
   15   1        IO0SET   = 0X0FF00400;
   16   1       
   17   1      
   18   1        //*************************************//
   19   1        //         Initialisations             //
   20   1        //*************************************//
   21   1        lcd_init();
   22   1        spi_init();
   23   1        irq_init();
   24   1        uart_init();
   25   1        
   26   1        lcd_line1_disp("SPI Test", 0);
   27   1      
   28   1        while(1)
   29   1        { 
   30   2         Uc_key_temp = get_key(0);
   31   2         if(Uc_key_temp == '1')
   32   2         {
   33   3      
   34   3          Uc_key_temp = 0;
   35   3          lcd_line2_disp("Enter data", 0);
   36   3          ms_delay(10000);
   37   3          Uc_key_temp = get_key(1);
   38   3      
   39   3          uart0_send_byte(spi_send_byte(Uc_key_temp));
   40   3          ms_delay(10000);
   41   3          lcd_line2_disp("          ", 0);
   42   3      
   43   3         }
   44   2        }
   45   1      }
   46          
   47          
   48          
   49          
   50          
   51          
   52          
ARM COMPILER V2.50a,  main                                                                 27/11/12  15:41:11  PAGE 2   

ASSEMBLY LISTING OF GENERATED OBJECT CODE



*** EXTERNALS:
 EXTERN CODE16 (uart_init?T)
 EXTERN CODE16 (uart0_send_byte?T)
 EXTERN CODE16 (irq_init?T)
 EXTERN CODE16 (lcd_init?T)
 EXTERN CODE16 (ms_delay?T)
 EXTERN CODE16 (lcd_line1_disp?T)
 EXTERN CODE16 (lcd_line2_disp?T)
 EXTERN CODE16 (get_key?T)
 EXTERN DATA (Uc_key_temp)
 EXTERN CODE16 (spi_init?T)
 EXTERN CODE16 (spi_send_byte?T)
 EXTERN NUMBER (__startup)



*** PUBLICS:
 PUBLIC         main



*** DATA SEGMENT '?CON?main':
 00000000          ??S_3:
 00000000            DB          '          ',0x00
 0000000B          ??S_2:
 0000000B            DB          'Enter data',0x00
 00000016          ??S_1:
 00000016            DB          'SPI Test',0x00

*** CODE SEGMENT '?PR?main?main':
    7: void main()
 00000000  B500      PUSH        {LR}
    9:   PINSEL0 |= 0X00051505;     // selecting UART0 and UART1
 00000002  4800      LDR         R2,=0x51505
 00000004  4800      LDR         R0,=0xE002C000
 00000006  6801      LDR         R1,[R0,#0x0]
 00000008  4311      ORR         R1,R2
 0000000A  6001      STR         R1,[R0,#0x0]
   10:   PINSEL1 |= 0X00080000;
 0000000C  4800      LDR         R2,=0x80000
 0000000E  4800      LDR         R0,=0xE002C004
 00000010  6801      LDR         R1,[R0,#0x0]
 00000012  4311      ORR         R1,R2
 00000014  6001      STR         R1,[R0,#0x0]
   11:   IO1DIR  |= 0X0FFF0000;     //pins 1.16 to 1.23 output pins
 00000016  4800      LDR         R2,=0xFFF0000
 00000018  4800      LDR         R0,=0xE0028018
 0000001A  6801      LDR         R1,[R0,#0x0]
 0000001C  4311      ORR         R1,R2
 0000001E  6001      STR         R1,[R0,#0x0]
   12:   IO0DIR  |= 0X003E0C00;     //port 0 rs and en as output
 00000020  4800      LDR         R2,=0x3E0C00
 00000022  4800      LDR         R0,=0xE0028008
 00000024  6801      LDR         R1,[R0,#0x0]
 00000026  4311      ORR         R1,R2
 00000028  6001      STR         R1,[R0,#0x0]
   13:   IO0CLR   = 0X00FF0000;    
 0000002A  4800      LDR         R1,=0xFF0000
 0000002C  4800      LDR         R0,=0xE002800C
 0000002E  6001      STR         R1,[R0,#0x0]
   15:   IO0SET   = 0X0FF00400;
 00000030  4800      LDR         R1,=0xFF00400
 00000032  4800      LDR         R0,=0xE0028004
 00000034  6001      STR         R1,[R0,#0x0]
   21:   lcd_init();
 00000036  F7FF      BL          lcd_init?T  ; T=0x0001  (1)
 00000038  FFE3      BL          lcd_init?T  ; T=0x0001  (2)
   22:   spi_init();
ARM COMPILER V2.50a,  main                                                                 27/11/12  15:41:11  PAGE 3   

 0000003A  F7FF      BL          spi_init?T  ; T=0x0001  (1)
 0000003C  FFE1      BL          spi_init?T  ; T=0x0001  (2)
   23:   irq_init();
 0000003E  F7FF      BL          irq_init?T  ; T=0x0001  (1)
 00000040  FFDF      BL          irq_init?T  ; T=0x0001  (2)
   24:   uart_init();
 00000042  F7FF      BL          uart_init?T  ; T=0x0001  (1)
 00000044  FFDD      BL          uart_init?T  ; T=0x0001  (2)
   26:   lcd_line1_disp("SPI Test", 0);
 00000046  4800      LDR         R0,=??S_1 ; ??S_1
 00000048  2100      MOV         R1,#0x0
 0000004A  F7FF      BL          lcd_line1_disp?T  ; T=0x0001  (1)
 0000004C  FFD9      BL          lcd_line1_disp?T  ; T=0x0001  (2)
   28:   while(1)
 0000004E          L_3:
   30:    Uc_key_temp = get_key(0);
 0000004E  2000      MOV         R0,#0x0
 00000050  F7FF      BL          get_key?T  ; T=0x0001  (1)
 00000052  FFD6      BL          get_key?T  ; T=0x0001  (2)
 00000054  4800      LDR         R1,=Uc_key_temp ; Uc_key_temp
 00000056  7008      STRB        R0,[R1,#0x0] ; Uc_key_temp
   31:    if(Uc_key_temp == '1')
 00000058  4800      LDR         R0,=Uc_key_temp ; Uc_key_temp
 0000005A  7800      LDRB        R0,[R0,#0x0] ; Uc_key_temp
 0000005C  2831      CMP         R0,#0x31
 0000005E  D1F6      BNE         L_3  ; T=0x0000004E
   34:     Uc_key_temp = 0;
 00000060  2100      MOV         R1,#0x0
 00000062  4800      LDR         R0,=Uc_key_temp ; Uc_key_temp
 00000064  7001      STRB        R1,[R0,#0x0] ; Uc_key_temp
   35:     lcd_line2_disp("Enter data", 0);
 00000066  4800      LDR         R0,=??S_2 ; ??S_2
 00000068  2100      MOV         R1,#0x0
 0000006A  F7FF      BL          lcd_line2_disp?T  ; T=0x0001  (1)
 0000006C  FFC9      BL          lcd_line2_disp?T  ; T=0x0001  (2)
   36:     ms_delay(10000);
 0000006E  4800      LDR         R0,=0x2710
 00000070  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 00000072  FFC6      BL          ms_delay?T  ; T=0x0001  (2)
   37:     Uc_key_temp = get_key(1);
 00000074  2001      MOV         R0,#0x1
 00000076  F7FF      BL          get_key?T  ; T=0x0001  (1)
 00000078  FFC3      BL          get_key?T  ; T=0x0001  (2)
 0000007A  4800      LDR         R1,=Uc_key_temp ; Uc_key_temp
 0000007C  7008      STRB        R0,[R1,#0x0] ; Uc_key_temp
   39:     uart0_send_byte(spi_send_byte(Uc_key_temp));
 0000007E  4800      LDR         R0,=Uc_key_temp ; Uc_key_temp
 00000080  7800      LDRB        R0,[R0,#0x0] ; Uc_key_temp
 00000082  F7FF      BL          spi_send_byte?T  ; T=0x0001  (1)
 00000084  FFBD      BL          spi_send_byte?T  ; T=0x0001  (2)
 00000086  0600      LSL         R0,R0,#0x18 ; spi_send_byte?T
 00000088  0E00      LSR         R0,R0,#0x18
 0000008A  F7FF      BL          uart0_send_byte?T  ; T=0x0001  (1)
 0000008C  FFB9      BL          uart0_send_byte?T  ; T=0x0001  (2)
   40:     ms_delay(10000);
 0000008E  4800      LDR         R0,=0x2710
 00000090  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 00000092  FFB6      BL          ms_delay?T  ; T=0x0001  (2)
   41:     lcd_line2_disp("          ", 0);
 00000094  4800      LDR         R0,=??S_3 ; ??S_3
 00000096  2100      MOV         R1,#0x0
 00000098  F7FF      BL          lcd_line2_disp?T  ; T=0x0001  (1)
 0000009A  FFB2      BL          lcd_line2_disp?T  ; T=0x0001  (2)
   44:   }
 0000009C  E7D7      B           L_3  ; T=0x0000004E
   45: }
ARM COMPILER V2.50a,  main                                                                 27/11/12  15:41:11  PAGE 4   

 0000009E  BC08      POP         {R3}
 000000A0  4718      BX          R3
 000000A2          ENDP ; 'main'



Module Information          Static
----------------------------------
  code size            =    ------
  data size            =    ------
  const size           =        31
End of Module Information.


ARM COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
