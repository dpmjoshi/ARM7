ARM COMPILER V2.50a,  gsm                                                                  22/05/13  17:19:49  PAGE 1   


ARM COMPILER V2.50a, COMPILATION OF MODULE gsm
OBJECT MODULE PLACED IN gsm.OBJ
COMPILER INVOKED BY: C:\Keil\ARM\BIN\CA.exe gsm.c THUMB BROWSE DEBUG TABS(4) 

stmt  level    source

    1          #include "includes.h"
    2          #define GSM_INIT_ERR 1<<5
    3          
    4          void gsm_init(void);
    5          void gsm_sms_send(U8*, U8*);
    6          void gsm_sms_del(U8);
    7          void gsm_sms_del_all(U8 );
    8          void gsm_sms_frmt(U8 frmt);
    9          void gsm_responce(void);
   10          void gsm_check_status(void);
   11          
   12          //*******************************************************//
   13          U8 uc_gsm_flw_ctrl[20]  = {"AT+IFC=1,1\r\n"};
   14          U8 uc_gsm_uart_baud[20] = {"AT+UART=2,9600\r\n"};
   15          U8 uc_gsm_regi[20]      = {"AT+CREG=1\r\n"};
   16          U8 Uc_send_sms1[20]     = {"AT+CMGS="};
   17          U8 Uc_send_sms2[20]     = {",128\r"};
   18          //*******************************************************//
   19          
   20          SMS_INFO SMS_cur;
   21          
   22              
   23          void gsm_init(void)
   24          {  
   25   1          Uc_stat_code_gsm = 0;
   26   1          ms_delay(10000);
   27   1          uart1_tx_string(&uc_gsm_flw_ctrl[0]);
   28   1          LIB_frmt_arr(Uc_uart1_str_gsm, 50);       
   29   1          ms_delay(10000);
   30   1          uart1_tx_string(&uc_gsm_regi[0]);
   31   1          ms_delay(10000);
   32   1          ms_delay(10000);
   33   1          ms_delay(10000);
   34   1          ms_delay(10000);
   35   1          ms_delay(10000);
   36   1          //gsm_sms_frmt('1');
   37   1          //gsm_sms_del_all(8);
   38   1          ms_delay(10000);
   39   1          ms_delay(10000);
   40   1          ms_delay(10000);    
   41   1      }
   42          
   43          
   44          // There are Two formats 0= PDU(Packet Data unit), 1= Text 
   45          // Select text mode
   46          void gsm_sms_frmt(U8 frmt)
   47          {
   48   1       uart1_tx_string("AT+CMGf=");
   49   1       uart1_tx_byte(frmt);
   50   1       ms_delay(10000);
   51   1      }
   52          
   53          void gsm_sms_send(U8 *ph_no, U8 *sms_content)
   54          {
   55   1          uart1_tx_string("AT+CMGS=");    
   56   1          uart1_tx_byte('"'); 
   57   1          uart1_tx_string(ph_no);
   58   1          uart1_tx_byte('"');
   59   1          uart1_tx_string(",128\r");
ARM COMPILER V2.50a,  gsm                                                                  22/05/13  17:19:49  PAGE 2   

   60   1          ms_delay(10000);
   61   1          uart1_tx_string(&sms_content[0]);
   62   1          ms_delay(500);  
   63   1          uart1_tx_byte(0x1a);
   64   1          ms_delay(50000);
   65   1          ms_delay(50000);
   66   1          /////////////////////////////////////////
   67   1      }
   68          
   69          /**********************************************************************************/
   70          /* Function Name: gsm_sms_del_all                                                 */
   71          /* Arguments    : NONE                                                            */
   72          /* Return Types : uc_sms_count(Total SMS to be deleted)                           */
   73          /* Description  : Function is to delete number of SIM messeges given by user      */
   74          /**********************************************************************************/
   75          void gsm_sms_del(U8 mem_location)
   76          {
   77   1      
   78   1          U8 uc_gsm_sms_del[20] = {"AT+CMGD=1\r\n"};
   79   1          
   80   1          ms_delay(10000);
   81   1          ms_delay(10000);
   82   1          uc_gsm_sms_del[8] = mem_location;
   83   1          uart1_tx_string(&uc_gsm_sms_del[0]);
   84   1      }
   85          
   86          /**********************************************************************************/
   87          /* Function Name: gsm_sms_del_all                                                 */
   88          /* Arguments    : NONE                                                            */
   89          /* Return Types : uc_sms_count(Total SMS to be deleted)                           */
   90          /* Description  : Function is to delete number of SIM messeges given by user      */
   91          /**********************************************************************************/
   92          void gsm_sms_del_all(U8 uc_sms_count)
   93          {
   94   1          while(uc_sms_count)
   95   1          {
   96   2              gsm_sms_del(uc_sms_count+0x30);
   97   2              uc_sms_count--;
   98   2              //gsm_responce();
   99   2          }
  100   1          
  101   1      }
  102          
  103          void gsm_check_status(void)
  104          {
  105   1       
  106   1      }
  107          
  108          U8 gsm_phno_validate(U8 *phone_no)
  109          {
  110   1        while(*phone_no)
  111   1        {
  112   2      
  113   2      
  114   2        }
  115   1        return 1;
  116   1      }
  117          
  118          
  119          
  120          void gsm_responce(void)
  121          {
  122   1        U8 uc_temp_byte = 0;
  123   1        U8 uc_count = 0;
  124   1        U8 uc_recv_resp[10];
  125   1        VICIntEnClr |= (1 << UART0_CHANNEL_NO);
ARM COMPILER V2.50a,  gsm                                                                  22/05/13  17:19:49  PAGE 3   

  126   1        while(uc_temp_byte != '\r')
  127   1        {
  128   2          uc_temp_byte = uart1_rx_byte();
  129   2          uart0_tx_byte(uc_temp_byte + 0x26);
  130   2        }
  131   1        while(uc_temp_byte != '\n')
  132   1        {
  133   2          uc_temp_byte = uart1_rx_byte();
  134   2          uart0_tx_byte(uc_temp_byte + 0x26);
  135   2          uc_recv_resp[uc_count] = uc_temp_byte;
  136   2          uc_count++;
  137   2        }
  138   1          VICIntEnable |= (1 << UART0_CHANNEL_NO);
  139   1      }
  140          
  141          /**********************************************************************************/
  142          /* Function Name: gsm_voice_call                                                  */
  143          /* Arguments    : NONE                                                            */
  144          /* Return Types : uc_sms_count(Total SMS to be deleted)                           */
  145          /* Description  :                                                                 */
  146          /**********************************************************************************/
  147          
  148          void gsm_voice_call(U8 *phone_no)
  149          {
  150   1       uart1_tx_string("ATD");
  151   1       uart1_tx_string(phone_no);
  152   1       uart1_tx_string(";\r\n");
  153   1      } 
  154           
  155          /**********************************************************************************/
  156          /* Function Name: gsm_end_voice_call                                              */
  157          /* Arguments    : NONE                                                            */
  158          /* Return Types : uc_sms_count(Total SMS to be deleted)                           */
  159          /* Description  :                                                                 */
  160          /**********************************************************************************/
  161          
  162          void gsm_end_voice_call()
  163          {
  164   1       uart1_tx_string("ATH\r\n");
  165   1      } 
  166          
ARM COMPILER V2.50a,  gsm                                                                  22/05/13  17:19:49  PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE



*** EXTERNALS:
 EXTERN DATA (Uc_uart1_str_gsm)
 EXTERN DATA (Uc_stat_code_gsm)
 EXTERN CODE16 (ms_delay?T)
 EXTERN CODE16 (uart1_rx_byte?T)
 EXTERN CODE16 (uart0_tx_byte?T)
 EXTERN CODE16 (uart1_tx_byte?T)
 EXTERN CODE16 (uart1_tx_string?T)
 EXTERN CODE16 (LIB_frmt_arr?T)



*** PUBLICS:
 PUBLIC         gsm_init?T
 PUBLIC         gsm_sms_send?T
 PUBLIC         gsm_sms_del?T
 PUBLIC         gsm_sms_del_all?T
 PUBLIC         gsm_check_status?T
 PUBLIC         gsm_voice_call?T
 PUBLIC         gsm_end_voice_call?T
 PUBLIC         gsm_sms_frmt?T
 PUBLIC         gsm_responce?T
 PUBLIC         gsm_phno_validate?T
 PUBLIC         SMS_cur
 PUBLIC         uc_gsm_flw_ctrl
 PUBLIC         uc_gsm_uart_baud
 PUBLIC         uc_gsm_regi
 PUBLIC         Uc_send_sms1
 PUBLIC         Uc_send_sms2



*** DATA SEGMENT '?CON?gsm':
 00000000          ??S_10:
 00000000            DB          'ATH',0x0D,0x0A,0x00
 00000006          ??S_9:
 00000006            DB          ';',0x0D,0x0A,0x00
 0000000A          ??S_8:
 0000000A            DB          'ATD',0x00
 0000000E          ??S_6:
 0000000E            DB          'AT+CMGf=',0x00
 00000017          ??S_5:
 00000017            DB          ',128',0x0D,0x00
 0000001D          ??S_4:
 0000001D            DB          'AT+CMGS=',0x00
 00000026            ALIGN       4
 00000028          ?tpl?0001:
 00000028           BEGIN_INIT
 00000028            DB          'AT+CMGD=1',0x0D,0x0A,0x00
 00000034            SPACE       8
 0000003C           END_INIT

*** DATA SEGMENT '?DT0?gsm':
 00000000          SMS_cur:
 00000000            DS          522
 0000020A          uc_gsm_flw_ctrl:
 0000020A           BEGIN_INIT
 0000020A            DB          'AT+IFC=1,1',0x0D,0x0A,0x00
 00000217            SPACE       7
 0000021E           END_INIT
 0000021E          uc_gsm_uart_baud:
 0000021E           BEGIN_INIT
 0000021E            DB          'AT+UART=2,9600',0x0D,0x0A,0x00
 0000022F            SPACE       3
 00000232           END_INIT
 00000232          uc_gsm_regi:
 00000232           BEGIN_INIT
 00000232            DB          'AT+CREG=1',0x0D,0x0A,0x00
ARM COMPILER V2.50a,  gsm                                                                  22/05/13  17:19:49  PAGE 5   

 0000023E            SPACE       8
 00000246           END_INIT
 00000246          Uc_send_sms1:
 00000246           BEGIN_INIT
 00000246            DB          'AT+CMGS=',0x00
 0000024F            SPACE       11
 0000025A           END_INIT
 0000025A          Uc_send_sms2:
 0000025A           BEGIN_INIT
 0000025A            DB          ',128',0x0D,0x00
 00000260            SPACE       14
 0000026E           END_INIT



*** CODE SEGMENT '?PR?gsm_init?T?gsm':
   23: void gsm_init(void)
 00000000  B500      PUSH        {LR}
   25:     Uc_stat_code_gsm = 0;
 00000002  2100      MOV         R1,#0x0
 00000004  4800      LDR         R0,=Uc_stat_code_gsm ; Uc_stat_code_gsm
 00000006  7001      STRB        R1,[R0,#0x0] ; Uc_stat_code_gsm
   26:     ms_delay(10000);
 00000008  4800      LDR         R0,=0x2710
 0000000A  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 0000000C  FFF9      BL          ms_delay?T  ; T=0x0001  (2)
   27:     uart1_tx_string(&uc_gsm_flw_ctrl[0]);
 0000000E  4800      LDR         R0,=uc_gsm_flw_ctrl ; uc_gsm_flw_ctrl
 00000010  F7FF      BL          uart1_tx_string?T  ; T=0x0001  (1)
 00000012  FFF6      BL          uart1_tx_string?T  ; T=0x0001  (2)
   28:     LIB_frmt_arr(Uc_uart1_str_gsm, 50);       
 00000014  4800      LDR         R0,=Uc_uart1_str_gsm ; Uc_uart1_str_gsm
 00000016  2132      MOV         R1,#0x32
 00000018  F7FF      BL          LIB_frmt_arr?T  ; T=0x0001  (1)
 0000001A  FFF2      BL          LIB_frmt_arr?T  ; T=0x0001  (2)
   29:     ms_delay(10000);
 0000001C  4800      LDR         R0,=0x2710
 0000001E  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 00000020  FFEF      BL          ms_delay?T  ; T=0x0001  (2)
   30:     uart1_tx_string(&uc_gsm_regi[0]);
 00000022  4800      LDR         R0,=uc_gsm_regi ; uc_gsm_regi
 00000024  F7FF      BL          uart1_tx_string?T  ; T=0x0001  (1)
 00000026  FFEC      BL          uart1_tx_string?T  ; T=0x0001  (2)
   31:     ms_delay(10000);
 00000028  4800      LDR         R0,=0x2710
 0000002A  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 0000002C  FFE9      BL          ms_delay?T  ; T=0x0001  (2)
   32:     ms_delay(10000);
 0000002E  4800      LDR         R0,=0x2710
 00000030  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 00000032  FFE6      BL          ms_delay?T  ; T=0x0001  (2)
   33:     ms_delay(10000);
 00000034  4800      LDR         R0,=0x2710
 00000036  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 00000038  FFE3      BL          ms_delay?T  ; T=0x0001  (2)
   34:     ms_delay(10000);
 0000003A  4800      LDR         R0,=0x2710
 0000003C  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 0000003E  FFE0      BL          ms_delay?T  ; T=0x0001  (2)
   35:     ms_delay(10000);
 00000040  4800      LDR         R0,=0x2710
 00000042  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 00000044  FFDD      BL          ms_delay?T  ; T=0x0001  (2)
   38:     ms_delay(10000);
 00000046  4800      LDR         R0,=0x2710
 00000048  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 0000004A  FFDA      BL          ms_delay?T  ; T=0x0001  (2)
   39:     ms_delay(10000);
ARM COMPILER V2.50a,  gsm                                                                  22/05/13  17:19:49  PAGE 6   

 0000004C  4800      LDR         R0,=0x2710
 0000004E  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 00000050  FFD7      BL          ms_delay?T  ; T=0x0001  (2)
   40:     ms_delay(10000);    
 00000052  4800      LDR         R0,=0x2710
 00000054  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 00000056  FFD4      BL          ms_delay?T  ; T=0x0001  (2)
   41: }
 00000058  BC08      POP         {R3}
 0000005A  4718      BX          R3
 0000005C          ENDP ; 'gsm_init?T'


*** CODE SEGMENT '?PR?gsm_sms_frmt?T?gsm':
   46: void gsm_sms_frmt(U8 frmt)
 00000000  B510      PUSH        {R4,LR}
 00000002  1C04      MOV         R4,R0 ; frmt
 00000004  ---- Variable 'frmt' assigned to Register 'R4' ----
   48:  uart1_tx_string("AT+CMGf=");
 00000004  4800      LDR         R0,=??S_6 ; ??S_6
 00000006  F7FF      BL          uart1_tx_string?T  ; T=0x0001  (1)
 00000008  FFFB      BL          uart1_tx_string?T  ; T=0x0001  (2)
   49:  uart1_tx_byte(frmt);
 0000000A  1C20      MOV         R0,R4 ; frmt
 0000000C  0600      LSL         R0,R0,#0x18 ; frmt
 0000000E  0E00      LSR         R0,R0,#0x18
 00000010  F7FF      BL          uart1_tx_byte?T  ; T=0x0001  (1)
 00000012  FFF6      BL          uart1_tx_byte?T  ; T=0x0001  (2)
   50:  ms_delay(10000);
 00000014  4800      LDR         R0,=0x2710
 00000016  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 00000018  FFF3      BL          ms_delay?T  ; T=0x0001  (2)
   51: }
 0000001A  BC10      POP         {R4}
 0000001C  BC08      POP         {R3}
 0000001E  4718      BX          R3
 00000020          ENDP ; 'gsm_sms_frmt?T'


*** CODE SEGMENT '?PR?gsm_sms_send?T?gsm':
   53: void gsm_sms_send(U8 *ph_no, U8 *sms_content)
 00000000  B530      PUSH        {R4-R5,LR}
 00000002  1C0C      MOV         R4,R1 ; sms_content
 00000004  ---- Variable 'sms_content' assigned to Register 'R4' ----
 00000004  1C05      MOV         R5,R0 ; ph_no
 00000006  ---- Variable 'ph_no' assigned to Register 'R5' ----
   55:     uart1_tx_string("AT+CMGS=");    
 00000006  4800      LDR         R0,=??S_4 ; ??S_4
 00000008  F7FF      BL          uart1_tx_string?T  ; T=0x0001  (1)
 0000000A  FFFA      BL          uart1_tx_string?T  ; T=0x0001  (2)
   56:     uart1_tx_byte('"'); 
 0000000C  2022      MOV         R0,#0x22
 0000000E  F7FF      BL          uart1_tx_byte?T  ; T=0x0001  (1)
 00000010  FFF7      BL          uart1_tx_byte?T  ; T=0x0001  (2)
   57:     uart1_tx_string(ph_no);
 00000012  1C28      MOV         R0,R5 ; ph_no
 00000014  F7FF      BL          uart1_tx_string?T  ; T=0x0001  (1)
 00000016  FFF4      BL          uart1_tx_string?T  ; T=0x0001  (2)
   58:     uart1_tx_byte('"');
 00000018  2022      MOV         R0,#0x22
 0000001A  F7FF      BL          uart1_tx_byte?T  ; T=0x0001  (1)
 0000001C  FFF1      BL          uart1_tx_byte?T  ; T=0x0001  (2)
   59:     uart1_tx_string(",128\r");
 0000001E  4800      LDR         R0,=??S_5 ; ??S_5
 00000020  F7FF      BL          uart1_tx_string?T  ; T=0x0001  (1)
 00000022  FFEE      BL          uart1_tx_string?T  ; T=0x0001  (2)
   60:     ms_delay(10000);
 00000024  4800      LDR         R0,=0x2710
 00000026  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 00000028  FFEB      BL          ms_delay?T  ; T=0x0001  (2)
ARM COMPILER V2.50a,  gsm                                                                  22/05/13  17:19:49  PAGE 7   

   61:     uart1_tx_string(&sms_content[0]);
 0000002A  1C20      MOV         R0,R4 ; sms_content
 0000002C  F7FF      BL          uart1_tx_string?T  ; T=0x0001  (1)
 0000002E  FFE8      BL          uart1_tx_string?T  ; T=0x0001  (2)
   62:     ms_delay(500);  
 00000030  487D      LDR         R0,=0x1F4
 00000032  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 00000034  FFE5      BL          ms_delay?T  ; T=0x0001  (2)
   63:     uart1_tx_byte(0x1a);
 00000036  201A      MOV         R0,#0x1A
 00000038  F7FF      BL          uart1_tx_byte?T  ; T=0x0001  (1)
 0000003A  FFE2      BL          uart1_tx_byte?T  ; T=0x0001  (2)
   64:     ms_delay(50000);
 0000003C  4800      LDR         R0,=0xC350
 0000003E  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 00000040  FFDF      BL          ms_delay?T  ; T=0x0001  (2)
   65:     ms_delay(50000);
 00000042  4800      LDR         R0,=0xC350
 00000044  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 00000046  FFDC      BL          ms_delay?T  ; T=0x0001  (2)
   67: }
 00000048  BC30      POP         {R4-R5}
 0000004A  BC08      POP         {R3}
 0000004C  4718      BX          R3
 0000004E          ENDP ; 'gsm_sms_send?T'


*** CODE SEGMENT '?PR?gsm_sms_del?T?gsm':
   75: void gsm_sms_del(U8 mem_location)
 00000000  B510      PUSH        {R4,LR}
 00000002  1C04      MOV         R4,R0 ; mem_location
 00000004  ---- Variable 'mem_location' assigned to Register 'R4' ----
 00000004  B085      SUB         R13,#0x14
   76: {
 00000006            ; SCOPE-START
   78:     U8 uc_gsm_sms_del[20] = {"AT+CMGD=1\r\n"};
 00000006  4800      LDR         R1,=?tpl?0001 ; ?tpl?0001
 00000008  A800      ADD         R0,R13,#0x0
 0000000A  2214      MOV         R2,#0x14
 0000000C          L_19:
 0000000C  780B      LDRB        R3,[R1,#0x0]
 0000000E  7003      STRB        R3,[R0,#0x0]
 00000010  1C49      ADD         R1,R1,#0x1
 00000012  1C40      ADD         R0,R0,#0x1
 00000014  1E52      SUB         R2,R2,#0x1
 00000016  D1F9      BNE         L_19  ; T=0x0000000C
   80:     ms_delay(10000);
 00000018  4800      LDR         R0,=0x2710
 0000001A  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 0000001C  FFF1      BL          ms_delay?T  ; T=0x0001  (2)
   81:     ms_delay(10000);
 0000001E  4800      LDR         R0,=0x2710
 00000020  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 00000022  FFEE      BL          ms_delay?T  ; T=0x0001  (2)
   82:     uc_gsm_sms_del[8] = mem_location;
 00000024  1C21      MOV         R1,R4 ; mem_location
 00000026  A802      ADD         R0,R13,#0x8
 00000028  7001      STRB        R1,[R0,#0x0] ; uc_gsm_sms_del+8
   83:     uart1_tx_string(&uc_gsm_sms_del[0]);
 0000002A  A800      ADD         R0,R13,#0x0
 0000002C  F7FF      BL          uart1_tx_string?T  ; T=0x0001  (1)
 0000002E  FFE8      BL          uart1_tx_string?T  ; T=0x0001  (2)
 00000030            ; SCOPE-END
   84: }
 00000030  B005      ADD         R13,#0x14
 00000032  BC10      POP         {R4}
 00000034  BC08      POP         {R3}
 00000036  4718      BX          R3
ARM COMPILER V2.50a,  gsm                                                                  22/05/13  17:19:49  PAGE 8   

 00000038          ENDP ; 'gsm_sms_del?T'


*** CODE SEGMENT '?PR?gsm_sms_del_all?T?gsm':
   92: void gsm_sms_del_all(U8 uc_sms_count)
 00000000  B510      PUSH        {R4,LR}
 00000002  1C04      MOV         R4,R0 ; uc_sms_count
 00000004  ---- Variable 'uc_sms_count' assigned to Register 'R4' ----
   94:     while(uc_sms_count)
 00000004  E008      B           L_1  ; T=0x00000018
 00000006          L_3:
   96:          gsm_sms_del(uc_sms_count+0x30);
 00000006  1C20      MOV         R0,R4 ; uc_sms_count
 00000008  0600      LSL         R0,R0,#0x18 ; uc_sms_count
 0000000A  0E00      LSR         R0,R0,#0x18
 0000000C  3030      ADD         R0,#0x30
 0000000E  F7FF      BL          gsm_sms_del?T  ; T=0x0001  (1)
 00000010  FFF7      BL          gsm_sms_del?T  ; T=0x0001  (2)
   97:         uc_sms_count--;
 00000012  3C01      SUB         R4,#0x1
 00000014  0624      LSL         R4,R4,#0x18
 00000016  0E24      LSR         R4,R4,#0x18
   99:     }
 00000018          L_1:
 00000018  1C20      MOV         R0,R4 ; uc_sms_count
 0000001A  2800      CMP         R0,#0x0 ; uc_sms_count
 0000001C  D1F3      BNE         L_3  ; T=0x00000006
  101: }
 0000001E  BC10      POP         {R4}
 00000020  BC08      POP         {R3}
 00000022  4718      BX          R3
 00000024          ENDP ; 'gsm_sms_del_all?T'


*** CODE SEGMENT '?PR?gsm_check_status?T?gsm':
  106: }
 00000000  4770      BX          R14
 00000002          ENDP ; 'gsm_check_status?T'


*** CODE SEGMENT '?PR?gsm_phno_validate?T?gsm':
  108: U8 gsm_phno_validate(U8 *phone_no)
 00000000  ---- Variable 'phone_no' assigned to Register 'R0' ----
  114:   }
 00000000          L_5:
 00000000  1C01      MOV         R1,R0 ; phone_no
 00000002  7809      LDRB        R1,[R1,#0x0] ; phone_no
 00000004  2900      CMP         R1,#0x0
 00000006  D1FB      BNE         L_5  ; T=0x00000000
  115:   return 1;
 00000008  2001      MOV         R0,#0x1
  116: }
 0000000A  4770      BX          R14
 0000000C          ENDP ; 'gsm_phno_validate?T'


*** CODE SEGMENT '?PR?gsm_responce?T?gsm':
  120: void gsm_responce(void)
 00000000  B530      PUSH        {R4-R5,LR}
 00000002  B083      SUB         R13,#0xC
  121: {
 00000004            ; SCOPE-START
  122:   U8 uc_temp_byte = 0;
 00000004  2400      MOV         R4,#0x0
 00000006  1C25      MOV         R5,R4 ; uc_temp_byte
 00000008  ---- Variable 'uc_temp_byte' assigned to Register 'R5' ----
  123:   U8 uc_count = 0;
 00000008  ---- Variable 'uc_count' assigned to Register 'R4' ----
  125:   VICIntEnClr |= (1 << UART0_CHANNEL_NO);
 00000008  2240      MOV         R2,#0x40
 0000000A  4800      LDR         R0,=0xFFFFF014
 0000000C  6801      LDR         R1,[R0,#0x0]
 0000000E  4311      ORR         R1,R2
 00000010  6001      STR         R1,[R0,#0x0]
ARM COMPILER V2.50a,  gsm                                                                  22/05/13  17:19:49  PAGE 9   

  126:   while(uc_temp_byte != '\r')
 00000012  E007      B           L_10  ; T=0x00000024
 00000014          L_12:
  128:       uc_temp_byte = uart1_rx_byte();
 00000014  F7FF      BL          uart1_rx_byte?T  ; T=0x0001  (1)
 00000016  FFF4      BL          uart1_rx_byte?T  ; T=0x0001  (2)
 00000018  1C05      MOV         R5,R0 ; uc_temp_byte
  129:     uart0_tx_byte(uc_temp_byte + 0x26);
 0000001A  0600      LSL         R0,R0,#0x18 ; uc_temp_byte
 0000001C  0E00      LSR         R0,R0,#0x18
 0000001E  3026      ADD         R0,#0x26
 00000020  F7FF      BL          uart0_tx_byte?T  ; T=0x0001  (1)
 00000022  FFEE      BL          uart0_tx_byte?T  ; T=0x0001  (2)
  130:   }
 00000024          L_10:
 00000024  1C28      MOV         R0,R5 ; uc_temp_byte
 00000026  0600      LSL         R0,R0,#0x18 ; uc_temp_byte
 00000028  0E00      LSR         R0,R0,#0x18
 0000002A  280D      CMP         R0,#0xD
 0000002C  D1F2      BNE         L_12  ; T=0x00000014
  131:   while(uc_temp_byte != '\n')
 0000002E  E010      B           L_14  ; T=0x00000052
 00000030          L_16:
  133:     uc_temp_byte = uart1_rx_byte();
 00000030  F7FF      BL          uart1_rx_byte?T  ; T=0x0001  (1)
 00000032  FFE6      BL          uart1_rx_byte?T  ; T=0x0001  (2)
 00000034  1C05      MOV         R5,R0 ; uc_temp_byte
  134:     uart0_tx_byte(uc_temp_byte + 0x26);
 00000036  0600      LSL         R0,R0,#0x18 ; uc_temp_byte
 00000038  0E00      LSR         R0,R0,#0x18
 0000003A  3026      ADD         R0,#0x26
 0000003C  F7FF      BL          uart0_tx_byte?T  ; T=0x0001  (1)
 0000003E  FFE0      BL          uart0_tx_byte?T  ; T=0x0001  (2)
  135:     uc_recv_resp[uc_count] = uc_temp_byte;
 00000040  1C28      MOV         R0,R5 ; uc_temp_byte
 00000042  1C21      MOV         R1,R4 ; uc_count
 00000044  060A      LSL         R2,R1,#0x18 ; uc_count
 00000046  0E12      LSR         R2,R2,#0x18
 00000048  A900      ADD         R1,R13,#0x0
 0000004A  5488      STRB        R0,[R1,R2]
  136:     uc_count++;
 0000004C  3401      ADD         R4,#0x1
 0000004E  0624      LSL         R4,R4,#0x18
 00000050  0E24      LSR         R4,R4,#0x18
  137:   }
 00000052          L_14:
 00000052  1C28      MOV         R0,R5 ; uc_temp_byte
 00000054  0600      LSL         R0,R0,#0x18 ; uc_temp_byte
 00000056  0E00      LSR         R0,R0,#0x18
 00000058  280A      CMP         R0,#0xA
 0000005A  D1E9      BNE         L_16  ; T=0x00000030
  138:     VICIntEnable |= (1 << UART0_CHANNEL_NO);
 0000005C  2240      MOV         R2,#0x40
 0000005E  4800      LDR         R0,=0xFFFFF010
 00000060  6801      LDR         R1,[R0,#0x0]
 00000062  4311      ORR         R1,R2
 00000064  6001      STR         R1,[R0,#0x0]
 00000066            ; SCOPE-END
  139: }
 00000066  B003      ADD         R13,#0xC
 00000068  BC30      POP         {R4-R5}
 0000006A  BC08      POP         {R3}
 0000006C  4718      BX          R3
 0000006E          ENDP ; 'gsm_responce?T'


*** CODE SEGMENT '?PR?gsm_voice_call?T?gsm':
  148: void gsm_voice_call(U8 *phone_no)
ARM COMPILER V2.50a,  gsm                                                                  22/05/13  17:19:49  PAGE 10  

 00000000  B510      PUSH        {R4,LR}
 00000002  1C04      MOV         R4,R0 ; phone_no
 00000004  ---- Variable 'phone_no' assigned to Register 'R4' ----
  150:  uart1_tx_string("ATD");
 00000004  4800      LDR         R0,=??S_8 ; ??S_8
 00000006  F7FF      BL          uart1_tx_string?T  ; T=0x0001  (1)
 00000008  FFFB      BL          uart1_tx_string?T  ; T=0x0001  (2)
  151:  uart1_tx_string(phone_no);
 0000000A  1C20      MOV         R0,R4 ; phone_no
 0000000C  F7FF      BL          uart1_tx_string?T  ; T=0x0001  (1)
 0000000E  FFF8      BL          uart1_tx_string?T  ; T=0x0001  (2)
  152:  uart1_tx_string(";\r\n");
 00000010  4800      LDR         R0,=??S_9 ; ??S_9
 00000012  F7FF      BL          uart1_tx_string?T  ; T=0x0001  (1)
 00000014  FFF5      BL          uart1_tx_string?T  ; T=0x0001  (2)
  153: } 
 00000016  BC10      POP         {R4}
 00000018  BC08      POP         {R3}
 0000001A  4718      BX          R3
 0000001C          ENDP ; 'gsm_voice_call?T'


*** CODE SEGMENT '?PR?gsm_end_voice_call?T?gsm':
  162: void gsm_end_voice_call()
 00000000  B500      PUSH        {LR}
  164:  uart1_tx_string("ATH\r\n");
 00000002  4800      LDR         R0,=??S_10 ; ??S_10
 00000004  F7FF      BL          uart1_tx_string?T  ; T=0x0001  (1)
 00000006  FFFC      BL          uart1_tx_string?T  ; T=0x0001  (2)
  165: } 
 00000008  BC08      POP         {R3}
 0000000A  4718      BX          R3
 0000000C          ENDP ; 'gsm_end_voice_call?T'



Module Information          Static
----------------------------------
  code size            =    ------
  data size            =       622
  const size           =        60
End of Module Information.


ARM COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
