ARM COMPILER V2.50a,  app                                                                  22/05/13  17:19:49  PAGE 1   


ARM COMPILER V2.50a, COMPILATION OF MODULE app
OBJECT MODULE PLACED IN app.OBJ
COMPILER INVOKED BY: C:\Keil\ARM\BIN\CA.exe app.c THUMB BROWSE DEBUG TABS(4) 

stmt  level    source

    1          #include"includes.h"
    2          #define     PAGE_SIZE        128
    3          #define     DEVICE_ADDR      0XA0
    4          
    5          
    6          void APP_default_page()
    7          {
    8   1          clrscr();
    9   1          lcd_line2_disp("NCL Mobile", 5);
   10   1      }
   11          
   12          /**********************************************************************************/
   13          /* Function Name: APP_phone_dial                                                  */
   14          /* Arguments    : *phone_no                                                               */
   15          /* Return Types :                                                                 */
   16          /* Description  :                                                                 */
   17          /**********************************************************************************/
   18          
   19          
   20          U8 APP_phone_dial(U8 *phone_no)
   21          {
   22   1          U8 uc_cnt = 10;
   23   1          U8 uc_temp_key = 0;
   24   1          U8 *uc_ptr;
   25   1          U8 uc_phone_no[20] = {0};
   26   1          clrscr();
   27   1          lcd_line1_disp("Phone:",0);
   28   1          lcd_line4_disp("Call",0);
   29   1          lcd_line4_disp("Cancel",14);
   30   1          ms_delay(8000);
   31   1      
   32   1          uc_ptr = &uc_phone_no[0];
   33   1          while(uc_temp_key != 'E')
   34   1          {
   35   2              uc_temp_key = get_key(0);
   36   2              if((uc_temp_key >= '0') && (uc_temp_key <= '9'))
   37   2              {
   38   3                  *uc_ptr = uc_temp_key;
   39   3                  uc_ptr++;
   40   3              }
   41   2              else if(uc_temp_key == 'A')
   42   2              {
   43   3                  if(uc_ptr >= &uc_phone_no[0])
   44   3                  {       
   45   4                      if(uc_ptr > &uc_phone_no[0])
   46   4                      {
   47   5                          uc_ptr--;
   48   5                      }
   49   4                  *uc_ptr = ' ';
   50   4                  }
   51   3              }
   52   2              else if(uc_temp_key == 'D')
   53   2              {
   54   3                  return 0;
   55   3              }
   56   2              lcd_line1_disp(&uc_phone_no[0], 7);
   57   2              ms_delay(1100);
   58   2          }
   59   1          *uc_ptr = '\0';
ARM COMPILER V2.50a,  app                                                                  22/05/13  17:19:49  PAGE 2   

   60   1      
   61   1          uc_cnt = LIB_strlen(&uc_phone_no[0]);
   62   1          if(uc_cnt > 0)
   63   1          {
   64   2              LIB_str_copy(&uc_phone_no[0], phone_no, uc_cnt+1);
   65   2              return 1;
   66   2          }
   67   1          else
   68   1          {
   69   2              return 2;
   70   2          }
   71   1      }
   72          
   73          /**********************************************************************************/
   74          /* Function Name: APP_keypad                                                      */
   75          /* Arguments    :                                                                 */
   76          /* Return Types :                                                                 */
   77          /* Description  :                                                                 */
   78          /**********************************************************************************/
   79          
   80          void APP_msgkey(U8 *text_msg)
   81          {
   82   1          U8 uc_key = 0;
   83   1          U8 *uc_ptr, *temp_msg;
   84   1          U8 cur_key = 0;
   85   1          U8 prev_key = 0;
   86   1          U8 *msg_arr[15] = {" 0", ".,;1", "abc2", "def3", "ghi4", "jkl5", "mno6", "pqrs7", "tuv8", "wxyz9"}; 
   87   1          
   88   1          temp_msg = text_msg;
   89   1          clrscr();
   90   1          
   91   1          while(cur_key != 'D')
   92   1          {   
   93   2              cur_key = get_key(1);
   94   2              uart0_tx_string("\r\nCur key: ");
   95   2              uart0_tx_byte(cur_key);
   96   2              uart0_tx_string("\r\nPrev key: ");
   97   2              uart0_tx_byte(prev_key);
   98   2              
   99   2      
  100   2              if((cur_key >= '0')&&(cur_key <= '9'))
  101   2              {
  102   3                  if(cur_key == prev_key)
  103   3                  {
  104   4                      if(*(uc_ptr + 1) == 0)
  105   4                      {
  106   5                          uart0_tx_string("\r\n *uc_ptr == 0 ");
  107   5                          uc_ptr = msg_arr[cur_key - 0x30];
  108   5                      }
  109   4                      else
  110   4                      {
  111   5                          uart0_tx_string("\r\n *uc_ptr != 0 ");
  112   5                          uc_ptr++;
  113   5                      }
  114   4                      *text_msg = *uc_ptr;  
  115   4                  }
  116   3                  else 
  117   3                  {
  118   4                      uc_ptr = msg_arr[cur_key - 0x30];
  119   4                      text_msg++;
  120   4                      *text_msg = *uc_ptr;
  121   4                      *(text_msg + 1) = '\0';
  122   4                      prev_key = cur_key;
  123   4                  }
  124   3              }
  125   2              else if(cur_key == 'A')
ARM COMPILER V2.50a,  app                                                                  22/05/13  17:19:49  PAGE 3   

  126   2              {
  127   3               *text_msg = ' ';
  128   3               if(text_msg != temp_msg)
  129   3               {
  130   4                  text_msg--;
  131   4               }
  132   3              }
  133   2              lcd_line_disp(temp_msg, 0, 1);
  134   2              uart0_tx_string("\n\r----->");
  135   2              uart0_tx_string(uc_ptr);
  136   2              uart0_tx_string("\n\r----->");
  137   2              uart0_tx_string(temp_msg);
  138   2              ms_delay(500);
  139   2          }
  140   1      }
  141          
  142          
ARM COMPILER V2.50a,  app                                                                  22/05/13  17:19:49  PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE



*** EXTERNALS:
 EXTERN CODE16 (ms_delay?T)
 EXTERN CODE16 (uart0_tx_byte?T)
 EXTERN CODE16 (uart0_tx_string?T)
 EXTERN CODE16 (LIB_str_copy?T)
 EXTERN CODE16 (LIB_strlen?T)
 EXTERN CODE16 (get_key?T)
 EXTERN CODE16 (clrscr?T)
 EXTERN CODE16 (lcd_line1_disp?T)
 EXTERN CODE16 (lcd_line2_disp?T)
 EXTERN CODE16 (lcd_line4_disp?T)
 EXTERN CODE16 (lcd_line_disp?T)



*** PUBLICS:
 PUBLIC         APP_phone_dial?T
 PUBLIC         APP_default_page?T
 PUBLIC         APP_msgkey?T



*** DATA SEGMENT '?CON?app':
 00000000          ?tpl?0002:
 00000000           BEGIN_INIT
 00000000  00000000  DD          ??S_5
 00000004  00000000  DD          ??S_6
 00000008  00000000  DD          ??S_7
 0000000C  00000000  DD          ??S_8
 00000010  00000000  DD          ??S_9
 00000014  00000000  DD          ??S_10
 00000018  00000000  DD          ??S_11
 0000001C  00000000  DD          ??S_12
 00000020  00000000  DD          ??S_13
 00000024  00000000  DD          ??S_14
 00000028            SPACE       20
 0000003C           END_INIT
 0000003C          ??S_19:
 0000003C            DB          0x0A,0x0D,'----->',0x00
 00000045          ??S_18:
 00000045            DB          0x0D,0x0A,' *uc_ptr != 0 ',0x00
 00000056          ??S_17:
 00000056            DB          0x0D,0x0A,' *uc_ptr == 0 ',0x00
 00000067          ??S_16:
 00000067            DB          0x0D,0x0A,'Prev key: ',0x00
 00000074          ??S_15:
 00000074            DB          0x0D,0x0A,'Cur key: ',0x00
 00000080          ??S_14:
 00000080            DB          'wxyz9',0x00
 00000086          ??S_13:
 00000086            DB          'tuv8',0x00
 0000008B          ??S_12:
 0000008B            DB          'pqrs7',0x00
 00000091          ??S_11:
 00000091            DB          'mno6',0x00
 00000096          ??S_10:
 00000096            DB          'jkl5',0x00
 0000009B          ??S_9:
 0000009B            DB          'ghi4',0x00
 000000A0          ??S_8:
 000000A0            DB          'def3',0x00
 000000A5          ??S_7:
 000000A5            DB          'abc2',0x00
 000000AA          ??S_6:
 000000AA            DB          '.,;1',0x00
 000000AF          ??S_5:
 000000AF            DB          ' 0',0x00
ARM COMPILER V2.50a,  app                                                                  22/05/13  17:19:49  PAGE 5   

 000000B2          ??S_4:
 000000B2            DB          'Cancel',0x00
 000000B9          ??S_3:
 000000B9            DB          'Call',0x00
 000000BE          ??S_2:
 000000BE            DB          'Phone:',0x00
 000000C5          ??S_1:
 000000C5            DB          'NCL Mobile',0x00
 000000D0          ?tpl?0001:
 000000D0           BEGIN_INIT
 000000D0  00        DB          0x0
 000000D1            SPACE       19
 000000E4           END_INIT

*** CODE SEGMENT '?PR?APP_default_page?T?app':
    6: void APP_default_page()
 00000000  B500      PUSH        {LR}
    8:     clrscr();
 00000002  F7FF      BL          clrscr?T  ; T=0x0001  (1)
 00000004  FFFD      BL          clrscr?T  ; T=0x0001  (2)
    9:     lcd_line2_disp("NCL Mobile", 5);
 00000006  4800      LDR         R0,=??S_1 ; ??S_1
 00000008  2105      MOV         R1,#0x5
 0000000A  F7FF      BL          lcd_line2_disp?T  ; T=0x0001  (1)
 0000000C  FFF9      BL          lcd_line2_disp?T  ; T=0x0001  (2)
   10: }
 0000000E  BC08      POP         {R3}
 00000010  4718      BX          R3
 00000012          ENDP ; 'APP_default_page?T'


*** CODE SEGMENT '?PR?APP_phone_dial?T?app':
   20: U8 APP_phone_dial(U8 *phone_no)
 00000000  B5F0      PUSH        {R4-R7,LR}
 00000002  1C04      MOV         R4,R0 ; phone_no
 00000004  ---- Variable 'phone_no' assigned to Register 'R4' ----
 00000004  B085      SUB         R13,#0x14
   21: {
 00000006            ; SCOPE-START
   22:     U8 uc_cnt = 10;
 00000006  260A      MOV         R6,#0xA
 00000008  ---- Variable 'uc_cnt' assigned to Register 'R6' ----
   23:     U8 uc_temp_key = 0;
 00000008  2700      MOV         R7,#0x0
 0000000A  ---- Variable 'uc_temp_key' assigned to Register 'R7' ----
   25:     U8 uc_phone_no[20] = {0};
 0000000A  4800      LDR         R1,=?tpl?0001 ; ?tpl?0001
 0000000C  A800      ADD         R0,R13,#0x0
 0000000E  2214      MOV         R2,#0x14
 00000010          L_28:
 00000010  780B      LDRB        R3,[R1,#0x0]
 00000012  7003      STRB        R3,[R0,#0x0]
 00000014  1C49      ADD         R1,R1,#0x1
 00000016  1C40      ADD         R0,R0,#0x1
 00000018  1E52      SUB         R2,R2,#0x1
 0000001A  D1F9      BNE         L_28  ; T=0x00000010
   26:     clrscr();
 0000001C  F7FF      BL          clrscr?T  ; T=0x0001  (1)
 0000001E  FFF0      BL          clrscr?T  ; T=0x0001  (2)
   27:     lcd_line1_disp("Phone:",0);
 00000020  4800      LDR         R0,=??S_2 ; ??S_2
 00000022  2100      MOV         R1,#0x0
 00000024  F7FF      BL          lcd_line1_disp?T  ; T=0x0001  (1)
 00000026  FFEC      BL          lcd_line1_disp?T  ; T=0x0001  (2)
   28:     lcd_line4_disp("Call",0);
 00000028  4800      LDR         R0,=??S_3 ; ??S_3
 0000002A  2100      MOV         R1,#0x0
 0000002C  F7FF      BL          lcd_line4_disp?T  ; T=0x0001  (1)
 0000002E  FFE8      BL          lcd_line4_disp?T  ; T=0x0001  (2)
ARM COMPILER V2.50a,  app                                                                  22/05/13  17:19:49  PAGE 6   

   29:     lcd_line4_disp("Cancel",14);
 00000030  4800      LDR         R0,=??S_4 ; ??S_4
 00000032  210E      MOV         R1,#0xE
 00000034  F7FF      BL          lcd_line4_disp?T  ; T=0x0001  (1)
 00000036  FFE4      BL          lcd_line4_disp?T  ; T=0x0001  (2)
   30:     ms_delay(8000);
 00000038  4800      LDR         R0,=0x1F40
 0000003A  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 0000003C  FFE1      BL          ms_delay?T  ; T=0x0001  (2)
   32:     uc_ptr = &uc_phone_no[0];
 0000003E  AD00      ADD         R5,R13,#0x0
 00000040  ---- Variable 'uc_ptr' assigned to Register 'R5' ----
   33:     while(uc_temp_key != 'E')
 00000040  E030      B           L_1  ; T=0x000000A4
 00000042          L_3:
   35:         uc_temp_key = get_key(0);
 00000042  2000      MOV         R0,#0x0
 00000044  F7FF      BL          get_key?T  ; T=0x0001  (1)
 00000046  FFDC      BL          get_key?T  ; T=0x0001  (2)
 00000048  1C07      MOV         R7,R0 ; uc_temp_key
   36:         if((uc_temp_key >= '0') && (uc_temp_key <= '9'))
 0000004A  0600      LSL         R0,R0,#0x18 ; uc_temp_key
 0000004C  0E00      LSR         R0,R0,#0x18
 0000004E  2830      CMP         R0,#0x30
 00000050  DB09      BLT         L_5  ; T=0x00000066
 00000052  1C38      MOV         R0,R7 ; uc_temp_key
 00000054  0600      LSL         R0,R0,#0x18 ; uc_temp_key
 00000056  0E00      LSR         R0,R0,#0x18
 00000058  2839      CMP         R0,#0x39
 0000005A  DC04      BGT         L_5  ; T=0x00000066
   38:             *uc_ptr = uc_temp_key;
 0000005C  1C39      MOV         R1,R7 ; uc_temp_key
 0000005E  1C28      MOV         R0,R5 ; uc_ptr
 00000060  7001      STRB        R1,[R0,#0x0] ; uc_ptr
   39:             uc_ptr++;
 00000062  3501      ADD         R5,#0x1
   40:         }
 00000064  E017      B           L_6  ; T=0x00000096
 00000066          L_5:
   41:         else if(uc_temp_key == 'A')
 00000066  1C38      MOV         R0,R7 ; uc_temp_key
 00000068  0600      LSL         R0,R0,#0x18 ; uc_temp_key
 0000006A  0E00      LSR         R0,R0,#0x18
 0000006C  2841      CMP         R0,#0x41
 0000006E  D10B      BNE         L_7  ; T=0x00000088
   43:             if(uc_ptr >= &uc_phone_no[0])
 00000070  A900      ADD         R1,R13,#0x0
 00000072  1C28      MOV         R0,R5 ; uc_ptr
 00000074  4288      CMP         R0,R1 ; uc_ptr
 00000076  D30E      BCC         L_6  ; T=0x00000096
   45:                    if(uc_ptr > &uc_phone_no[0])
 00000078  1C28      MOV         R0,R5 ; uc_ptr
 0000007A  4288      CMP         R0,R1 ; uc_ptr
 0000007C  D900      BLS         L_9  ; T=0x00000080
   47:                     uc_ptr--;
 0000007E  3D01      SUB         R5,#0x1
   48:                 }
 00000080          L_9:
   49:             *uc_ptr = ' ';
 00000080  2120      MOV         R1,#0x20
 00000082  1C28      MOV         R0,R5 ; uc_ptr
 00000084  7001      STRB        R1,[R0,#0x0] ; uc_ptr
   51:         }
 00000086  E006      B           L_6  ; T=0x00000096
 00000088          L_7:
   52:         else if(uc_temp_key == 'D')
ARM COMPILER V2.50a,  app                                                                  22/05/13  17:19:49  PAGE 7   

 00000088  1C38      MOV         R0,R7 ; uc_temp_key
 0000008A  0600      LSL         R0,R0,#0x18 ; uc_temp_key
 0000008C  0E00      LSR         R0,R0,#0x18
 0000008E  2844      CMP         R0,#0x44
 00000090  D101      BNE         L_6  ; T=0x00000096
   54:              return 0;
 00000092  2000      MOV         R0,#0x0
 00000094  E024      B           L_12  ; T=0x000000E0
   55:         }
 00000096          L_6:
   56:         lcd_line1_disp(&uc_phone_no[0], 7);
 00000096  A800      ADD         R0,R13,#0x0
 00000098  2107      MOV         R1,#0x7
 0000009A  F7FF      BL          lcd_line1_disp?T  ; T=0x0001  (1)
 0000009C  FFB1      BL          lcd_line1_disp?T  ; T=0x0001  (2)
   57:         ms_delay(1100);
 0000009E  4800      LDR         R0,=0x44C
 000000A0  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 000000A2  FFAE      BL          ms_delay?T  ; T=0x0001  (2)
   58:       }
 000000A4          L_1:
 000000A4  1C38      MOV         R0,R7 ; uc_temp_key
 000000A6  0600      LSL         R0,R0,#0x18 ; uc_temp_key
 000000A8  0E00      LSR         R0,R0,#0x18
 000000AA  2845      CMP         R0,#0x45
 000000AC  D1C9      BNE         L_3  ; T=0x00000042
   59:       *uc_ptr = '\0';
 000000AE  2100      MOV         R1,#0x0
 000000B0  1C28      MOV         R0,R5 ; uc_ptr
 000000B2  7001      STRB        R1,[R0,#0x0] ; uc_ptr
   61:       uc_cnt = LIB_strlen(&uc_phone_no[0]);
 000000B4  AD00      ADD         R5,R13,#0x0
 000000B6  1C28      MOV         R0,R5
 000000B8  F7FF      BL          LIB_strlen?T  ; T=0x0001  (1)
 000000BA  FFA2      BL          LIB_strlen?T  ; T=0x0001  (2)
 000000BC  0606      LSL         R6,R0,#0x18 ; LIB_strlen?T
 000000BE  0E36      LSR         R6,R6,#0x18
   62:       if(uc_cnt > 0)
 000000C0  1C30      MOV         R0,R6 ; uc_cnt
 000000C2  0600      LSL         R0,R0,#0x18 ; uc_cnt
 000000C4  0E00      LSR         R0,R0,#0x18
 000000C6  2800      CMP         R0,#0x0
 000000C8  DD09      BLE         L_13  ; T=0x000000DE
   64:           LIB_str_copy(&uc_phone_no[0], phone_no, uc_cnt+1);
 000000CA  1C30      MOV         R0,R6 ; uc_cnt
 000000CC  0602      LSL         R2,R0,#0x18 ; uc_cnt
 000000CE  0E12      LSR         R2,R2,#0x18
 000000D0  3201      ADD         R2,#0x1
 000000D2  1C28      MOV         R0,R5
 000000D4  1C21      MOV         R1,R4 ; phone_no
 000000D6  F7FF      BL          LIB_str_copy?T  ; T=0x0001  (1)
 000000D8  FF93      BL          LIB_str_copy?T  ; T=0x0001  (2)
   65:           return 1;
 000000DA  2001      MOV         R0,#0x1
 000000DC  E000      B           L_12  ; T=0x000000E0
   66:       }
 000000DE          L_13:
   69:            return 2;
 000000DE  2002      MOV         R0,#0x2
   70:       }
 000000E0            ; SCOPE-END
   71: }
 000000E0          L_12:
 000000E0  B005      ADD         R13,#0x14
 000000E2  BCF0      POP         {R4-R7}
 000000E4  BC08      POP         {R3}
ARM COMPILER V2.50a,  app                                                                  22/05/13  17:19:49  PAGE 8   

 000000E6  4718      BX          R3
 000000E8          ENDP ; 'APP_phone_dial?T'


*** CODE SEGMENT '?PR?APP_msgkey?T?app':
   80: void APP_msgkey(U8 *text_msg)
 00000000  B5F0      PUSH        {R4-R7,LR}
 00000002  1C07      MOV         R7,R0 ; text_msg
 00000004  ---- Variable 'text_msg' assigned to Register 'R7' ----
 00000004  B090      SUB         R13,#0x40
 00000006  ---- Variable 'uc_ptr' assigned to Register 'R4' ----
   81: {
 00000006            ; SCOPE-START
   84:     U8 cur_key = 0;
 00000006  2100      MOV         R1,#0x0
 00000008  1C0E      MOV         R6,R1 ; cur_key
 0000000A  ---- Variable 'cur_key' assigned to Register 'R6' ----
   85:     U8 prev_key = 0;
 0000000A  A800      ADD         R0,R13,#0x0
 0000000C  7001      STRB        R1,[R0,#0x0] ; prev_key
   86:     U8 *msg_arr[15] = {" 0", ".,;1", "abc2", "def3", "ghi4", "jkl5", "mno6", "pqrs7", "tuv8", "wxyz9"}; 
 0000000E  4800      LDR         R1,=?tpl?0002 ; ?tpl?0002
 00000010  A801      ADD         R0,R13,#0x4
 00000012  223C      MOV         R2,#0x3C
 00000014          L_30:
 00000014  780B      LDRB        R3,[R1,#0x0]
 00000016  7003      STRB        R3,[R0,#0x0]
 00000018  1C49      ADD         R1,R1,#0x1
 0000001A  1C40      ADD         R0,R0,#0x1
 0000001C  1E52      SUB         R2,R2,#0x1
 0000001E  D1F9      BNE         L_30  ; T=0x00000014
   88:     temp_msg = text_msg;
 00000020  1C3D      MOV         R5,R7 ; text_msg
 00000022  ---- Variable 'temp_msg' assigned to Register 'R5' ----
   89:     clrscr();
 00000022  F7FF      BL          clrscr?T  ; T=0x0001  (1)
 00000024  FFED      BL          clrscr?T  ; T=0x0001  (2)
   91:     while(cur_key != 'D')
 00000026  E070      B           L_15  ; T=0x0000010A
 00000028          L_17:
   93:          cur_key = get_key(1);
 00000028  2001      MOV         R0,#0x1
 0000002A  F7FF      BL          get_key?T  ; T=0x0001  (1)
 0000002C  FFE9      BL          get_key?T  ; T=0x0001  (2)
 0000002E  1C06      MOV         R6,R0 ; cur_key
   94:         uart0_tx_string("\r\nCur key: ");
 00000030  4800      LDR         R0,=??S_15 ; ??S_15
 00000032  F7FF      BL          uart0_tx_string?T  ; T=0x0001  (1)
 00000034  FFE5      BL          uart0_tx_string?T  ; T=0x0001  (2)
   95:         uart0_tx_byte(cur_key);
 00000036  1C30      MOV         R0,R6 ; cur_key
 00000038  0600      LSL         R0,R0,#0x18 ; cur_key
 0000003A  0E00      LSR         R0,R0,#0x18
 0000003C  F7FF      BL          uart0_tx_byte?T  ; T=0x0001  (1)
 0000003E  FFE0      BL          uart0_tx_byte?T  ; T=0x0001  (2)
   96:         uart0_tx_string("\r\nPrev key: ");
 00000040  4800      LDR         R0,=??S_16 ; ??S_16
 00000042  F7FF      BL          uart0_tx_string?T  ; T=0x0001  (1)
 00000044  FFDD      BL          uart0_tx_string?T  ; T=0x0001  (2)
   97:         uart0_tx_byte(prev_key);
 00000046  A800      ADD         R0,R13,#0x0
 00000048  7800      LDRB        R0,[R0,#0x0] ; prev_key
 0000004A  F7FF      BL          uart0_tx_byte?T  ; T=0x0001  (1)
 0000004C  FFD9      BL          uart0_tx_byte?T  ; T=0x0001  (2)
  100:         if((cur_key >= '0')&&(cur_key <= '9'))
 0000004E  1C30      MOV         R0,R6 ; cur_key
 00000050  0600      LSL         R0,R0,#0x18 ; cur_key
 00000052  0E00      LSR         R0,R0,#0x18
ARM COMPILER V2.50a,  app                                                                  22/05/13  17:19:49  PAGE 9   

 00000054  2830      CMP         R0,#0x30
 00000056  DB37      BLT         L_19  ; T=0x000000C8
 00000058  1C30      MOV         R0,R6 ; cur_key
 0000005A  0600      LSL         R0,R0,#0x18 ; cur_key
 0000005C  0E00      LSR         R0,R0,#0x18
 0000005E  2839      CMP         R0,#0x39
 00000060  DC32      BGT         L_19  ; T=0x000000C8
  102:             if(cur_key == prev_key)
 00000062  A800      ADD         R0,R13,#0x0
 00000064  7800      LDRB        R0,[R0,#0x0] ; prev_key
 00000066  1C01      MOV         R1,R0
 00000068  1C30      MOV         R0,R6 ; cur_key
 0000006A  0600      LSL         R0,R0,#0x18 ; cur_key
 0000006C  0E00      LSR         R0,R0,#0x18
 0000006E  4288      CMP         R0,R1
 00000070  D117      BNE         L_20  ; T=0x000000A2
  104:                   if(*(uc_ptr + 1) == 0)
 00000072  1C20      MOV         R0,R4 ; uc_ptr
 00000074  7840      LDRB        R0,[R0,#0x1]
 00000076  2800      CMP         R0,#0x0
 00000078  D10A      BNE         L_21  ; T=0x00000090
  106:                     uart0_tx_string("\r\n *uc_ptr == 0 ");
 0000007A  4800      LDR         R0,=??S_17 ; ??S_17
 0000007C  F7FF      BL          uart0_tx_string?T  ; T=0x0001  (1)
 0000007E  FFC0      BL          uart0_tx_string?T  ; T=0x0001  (2)
  107:                     uc_ptr = msg_arr[cur_key - 0x30];
 00000080  1C30      MOV         R0,R6 ; cur_key
 00000082  0601      LSL         R1,R0,#0x18 ; cur_key
 00000084  0E09      LSR         R1,R1,#0x18
 00000086  0089      LSL         R1,R1,#0x2
 00000088  4800      LDR         R0,=0xFFFFFF44
 0000008A  4468      ADD         R0,R13
 0000008C  5844      LDR         R4,[R0,R1]
  108:                 }
 0000008E  E003      B           L_22  ; T=0x00000098
 00000090          L_21:
  111:                     uart0_tx_string("\r\n *uc_ptr != 0 ");
 00000090  4800      LDR         R0,=??S_18 ; ??S_18
 00000092  F7FF      BL          uart0_tx_string?T  ; T=0x0001  (1)
 00000094  FFB5      BL          uart0_tx_string?T  ; T=0x0001  (2)
  112:                        uc_ptr++;
 00000096  3401      ADD         R4,#0x1
  113:                    }
 00000098          L_22:
  114:                 *text_msg = *uc_ptr;  
 00000098  1C20      MOV         R0,R4 ; uc_ptr
 0000009A  7801      LDRB        R1,[R0,#0x0] ; uc_ptr
 0000009C  1C38      MOV         R0,R7 ; text_msg
 0000009E  7001      STRB        R1,[R0,#0x0] ; text_msg
  115:             }
 000000A0  E01F      B           L_24  ; T=0x000000E2
 000000A2          L_20:
  118:                 uc_ptr = msg_arr[cur_key - 0x30];
 000000A2  1C30      MOV         R0,R6 ; cur_key
 000000A4  0601      LSL         R1,R0,#0x18 ; cur_key
 000000A6  0E09      LSR         R1,R1,#0x18
 000000A8  0089      LSL         R1,R1,#0x2
 000000AA  4800      LDR         R0,=0xFFFFFF44
 000000AC  4468      ADD         R0,R13
 000000AE  5844      LDR         R4,[R0,R1]
  119:                 text_msg++;
 000000B0  3701      ADD         R7,#0x1
  120:                 *text_msg = *uc_ptr;
 000000B2  1C20      MOV         R0,R4 ; uc_ptr
 000000B4  7801      LDRB        R1,[R0,#0x0] ; uc_ptr
 000000B6  1C38      MOV         R0,R7 ; text_msg
ARM COMPILER V2.50a,  app                                                                  22/05/13  17:19:49  PAGE 10  

 000000B8  7001      STRB        R1,[R0,#0x0] ; text_msg
  121:                 *(text_msg + 1) = '\0';
 000000BA  2100      MOV         R1,#0x0
 000000BC  1C38      MOV         R0,R7 ; text_msg
 000000BE  7041      STRB        R1,[R0,#0x1]
  122:                 prev_key = cur_key;
 000000C0  1C31      MOV         R1,R6 ; cur_key
 000000C2  A800      ADD         R0,R13,#0x0
 000000C4  7001      STRB        R1,[R0,#0x0] ; prev_key
  124:         }
 000000C6  E00C      B           L_24  ; T=0x000000E2
 000000C8          L_19:
  125:         else if(cur_key == 'A')
 000000C8  1C30      MOV         R0,R6 ; cur_key
 000000CA  0600      LSL         R0,R0,#0x18 ; cur_key
 000000CC  0E00      LSR         R0,R0,#0x18
 000000CE  2841      CMP         R0,#0x41
 000000D0  D107      BNE         L_24  ; T=0x000000E2
  127:          *text_msg = ' ';
 000000D2  2120      MOV         R1,#0x20
 000000D4  1C38      MOV         R0,R7 ; text_msg
 000000D6  7001      STRB        R1,[R0,#0x0] ; text_msg
  128:          if(text_msg != temp_msg)
 000000D8  1C29      MOV         R1,R5 ; temp_msg
 000000DA  1C38      MOV         R0,R7 ; text_msg
 000000DC  4288      CMP         R0,R1 ; text_msg
 000000DE  D000      BEQ         L_24  ; T=0x000000E2
  130:             text_msg--;
 000000E0  3F01      SUB         R7,#0x1
  132:         }
 000000E2          L_24:
  133:         lcd_line_disp(temp_msg, 0, 1);
 000000E2  1C28      MOV         R0,R5 ; temp_msg
 000000E4  2100      MOV         R1,#0x0
 000000E6  2201      MOV         R2,#0x1
 000000E8  F7FF      BL          lcd_line_disp?T  ; T=0x0001  (1)
 000000EA  FF8A      BL          lcd_line_disp?T  ; T=0x0001  (2)
  134:         uart0_tx_string("\n\r----->");
 000000EC  4800      LDR         R0,=??S_19 ; ??S_19
 000000EE  F7FF      BL          uart0_tx_string?T  ; T=0x0001  (1)
 000000F0  FF87      BL          uart0_tx_string?T  ; T=0x0001  (2)
  135:         uart0_tx_string(uc_ptr);
 000000F2  1C20      MOV         R0,R4 ; uc_ptr
 000000F4  F7FF      BL          uart0_tx_string?T  ; T=0x0001  (1)
 000000F6  FF84      BL          uart0_tx_string?T  ; T=0x0001  (2)
  136:         uart0_tx_string("\n\r----->");
 000000F8  4800      LDR         R0,=??S_19 ; ??S_19
 000000FA  F7FF      BL          uart0_tx_string?T  ; T=0x0001  (1)
 000000FC  FF81      BL          uart0_tx_string?T  ; T=0x0001  (2)
  137:         uart0_tx_string(temp_msg);
 000000FE  1C28      MOV         R0,R5 ; temp_msg
 00000100  F7FF      BL          uart0_tx_string?T  ; T=0x0001  (1)
 00000102  FF7E      BL          uart0_tx_string?T  ; T=0x0001  (2)
  138:         ms_delay(500);
 00000104  487D      LDR         R0,=0x1F4
 00000106  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 00000108  FF7B      BL          ms_delay?T  ; T=0x0001  (2)
  139:     }
 0000010A          L_15:
 0000010A  1C30      MOV         R0,R6 ; cur_key
 0000010C  0600      LSL         R0,R0,#0x18 ; cur_key
 0000010E  0E00      LSR         R0,R0,#0x18
 00000110  2844      CMP         R0,#0x44
 00000112  D189      BNE         L_17  ; T=0x00000028
 00000114            ; SCOPE-END
  140: }
ARM COMPILER V2.50a,  app                                                                  22/05/13  17:19:49  PAGE 11  

 00000114  B010      ADD         R13,#0x40
 00000116  BCF0      POP         {R4-R7}
 00000118  BC08      POP         {R3}
 0000011A  4718      BX          R3
 0000011C          ENDP ; 'APP_msgkey?T'



Module Information          Static
----------------------------------
  code size            =    ------
  data size            =    ------
  const size           =       228
End of Module Information.


ARM COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
