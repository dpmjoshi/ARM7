ARM COMPILER V2.40e,  main                                                                 14/05/12  17:49:42  PAGE 1   


ARM COMPILER V2.40e, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\ARM\BIN\CA.exe main.c THUMB BROWSE DEBUG TABS(4) 

stmt  level    source

    1          #include"includes.h"
    2          //************************************************************//
    3          
    4          
    5          //*************************Flags*******************************//
    6          U8 Uc_new_key = 0;
    7          U8 Uc_prev_key = 0;
    8          U8 Uc_actual_key = 0;
    9          U8 key_cnt = 0;
   10          U8 msg_cnt = 0, first_key = 1;
   11          U8 msg_arr[128] = {"                  "};
   12          
   13          void main()
   14          {   
   15   1        PINSEL0 |= 0X00050005;     // selecting UART0 and UART1
   16   1        PINSEL1 |= 0X00080000;
   17   1        IO1DIR  |= 0X0FFF0000;     //pins 1.16 to 1.23 output pins
   18   1        IO0DIR  |= 0X003E0C00;     //port 0 rs and en as output
   19   1        IO0CLR   = 0X00FF0000;    
   20   1        
   21   1        IO0SET   = 0X0FF00400;
   22   1       
   23   1      
   24   1        //*************************************//
   25   1        //         Initialisations             //
   26   1        //*************************************//
   27   1        lcd_init();
   28   1        clrscr();
   29   1        ms_delay(10000);
   30   1        lcd_line1_disp("Lib function", 0);
   31   1        while(1)
   32   1        { 
   33   2        hex_ascii(0x10000000);
   34   2        lcd_line2_disp(&Uc_ascii_arr[0], 0);
   35   2        while(1);
   36   2           
   37   2        }
   38   1      
   39   1      
   40   1      }
   41          
   42          
   43          
   44          
ARM COMPILER V2.40e,  main                                                                 14/05/12  17:49:42  PAGE 2   

ASSEMBLY LISTING OF GENERATED OBJECT CODE



*** EXTERNALS:
 EXTERN CODE16 (lcd_init?T)
 EXTERN CODE16 (clrscr?T)
 EXTERN CODE16 (ms_delay?T)
 EXTERN CODE16 (lcd_line1_disp?T)
 EXTERN CODE16 (lcd_line2_disp?T)
 EXTERN CODE16 (hex_ascii?T)
 EXTERN DATA (Uc_ascii_arr)
 EXTERN NUMBER (__startup)



*** PUBLICS:
 PUBLIC         main
 PUBLIC         Uc_new_key
 PUBLIC         Uc_prev_key
 PUBLIC         Uc_actual_key
 PUBLIC         key_cnt
 PUBLIC         msg_cnt
 PUBLIC         first_key
 PUBLIC         msg_arr



*** DATA SEGMENT '?CON?main':
 00000000          ??S_2:
 00000000            DB          'Lib function',0x00

*** DATA SEGMENT '?DT0?main':
 00000000          Uc_new_key:
 00000000           BEGIN_INIT
 00000000  00        DB          0x0
 00000001           END_INIT
 00000001          Uc_prev_key:
 00000001           BEGIN_INIT
 00000001  00        DB          0x0
 00000002           END_INIT
 00000002          Uc_actual_key:
 00000002           BEGIN_INIT
 00000002  00        DB          0x0
 00000003           END_INIT
 00000003          key_cnt:
 00000003           BEGIN_INIT
 00000003  00        DB          0x0
 00000004           END_INIT
 00000004          msg_cnt:
 00000004           BEGIN_INIT
 00000004  00        DB          0x0
 00000005           END_INIT
 00000005          first_key:
 00000005           BEGIN_INIT
 00000005  01        DB          0x1
 00000006           END_INIT
 00000006          msg_arr:
 00000006           BEGIN_INIT
 00000006            DB          '                  ',0x00
 00000019            SPACE       109
 00000086           END_INIT



*** CODE SEGMENT '?PR?main?main':
   13: void main()
 00000000  B500      PUSH        {LR}
   15:   PINSEL0 |= 0X00050005;     // selecting UART0 and UART1
 00000002  4800      LDR         R2,=0x50005
 00000004  4800      LDR         R0,=0xE002C000
 00000006  6801      LDR         R1,[R0,#0x0]
 00000008  4311      ORR         R1,R2
 0000000A  6001      STR         R1,[R0,#0x0]
ARM COMPILER V2.40e,  main                                                                 14/05/12  17:49:42  PAGE 3   

   16:   PINSEL1 |= 0X00080000;
 0000000C  4800      LDR         R2,=0x80000
 0000000E  4800      LDR         R0,=0xE002C004
 00000010  6801      LDR         R1,[R0,#0x0]
 00000012  4311      ORR         R1,R2
 00000014  6001      STR         R1,[R0,#0x0]
   17:   IO1DIR  |= 0X0FFF0000;     //pins 1.16 to 1.23 output pins
 00000016  4800      LDR         R2,=0xFFF0000
 00000018  4800      LDR         R0,=0xE0028018
 0000001A  6801      LDR         R1,[R0,#0x0]
 0000001C  4311      ORR         R1,R2
 0000001E  6001      STR         R1,[R0,#0x0]
   18:   IO0DIR  |= 0X003E0C00;     //port 0 rs and en as output
 00000020  4800      LDR         R2,=0x3E0C00
 00000022  4800      LDR         R0,=0xE0028008
 00000024  6801      LDR         R1,[R0,#0x0]
 00000026  4311      ORR         R1,R2
 00000028  6001      STR         R1,[R0,#0x0]
   19:   IO0CLR   = 0X00FF0000;    
 0000002A  4800      LDR         R1,=0xFF0000
 0000002C  4800      LDR         R0,=0xE002800C
 0000002E  6001      STR         R1,[R0,#0x0]
   21:   IO0SET   = 0X0FF00400;
 00000030  4800      LDR         R1,=0xFF00400
 00000032  4800      LDR         R0,=0xE0028004
 00000034  6001      STR         R1,[R0,#0x0]
   27:   lcd_init();
 00000036  F7FF      BL          lcd_init?T  ; T=0x0001  (1)
 00000038  FFE3      BL          lcd_init?T  ; T=0x0001  (2)
   28:   clrscr();
 0000003A  F7FF      BL          clrscr?T  ; T=0x0001  (1)
 0000003C  FFE1      BL          clrscr?T  ; T=0x0001  (2)
   29:   ms_delay(10000);
 0000003E  4800      LDR         R0,=0x2710
 00000040  F7FF      BL          ms_delay?T  ; T=0x0001  (1)
 00000042  FFDE      BL          ms_delay?T  ; T=0x0001  (2)
   30:   lcd_line1_disp("Lib function", 0);
 00000044  4800      LDR         R0,=??S_2 ; ??S_2
 00000046  2100      MOV         R1,#0x0
 00000048  F7FF      BL          lcd_line1_disp?T  ; T=0x0001  (1)
 0000004A  FFDA      BL          lcd_line1_disp?T  ; T=0x0001  (2)
   33:   hex_ascii(0x10000000);
 0000004C  4800      LDR         R0,=0x10000000
 0000004E  F7FF      BL          hex_ascii?T  ; T=0x0001  (1)
 00000050  FFD7      BL          hex_ascii?T  ; T=0x0001  (2)
   34:   lcd_line2_disp(&Uc_ascii_arr[0], 0);
 00000052  4800      LDR         R0,=Uc_ascii_arr ; Uc_ascii_arr
 00000054  2100      MOV         R1,#0x0
 00000056  F7FF      BL          lcd_line2_disp?T  ; T=0x0001  (1)
 00000058  FFD3      BL          lcd_line2_disp?T  ; T=0x0001  (2)
   35:   while(1);
 0000005A          L_5:
 0000005A  E7FE      B           L_5  ; T=0x0000005A
   40: }
 0000005C  BC08      POP         {R3}
 0000005E  4718      BX          R3
 00000060          ENDP ; 'main'



Module Information          Static
----------------------------------
  code size            =    ------
  data size            =       134
  const size           =        13
End of Module Information.


ARM COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
